{"ast":null,"code":"import*as React from'react';import createElement from\"../createElement\";import*as forwardedProps from\"../../modules/forwardedProps\";import pick from\"../../modules/pick\";import useElementLayout from\"../../modules/useElementLayout\";import useLayoutEffect from\"../../modules/useLayoutEffect\";import useMergeRefs from\"../../modules/useMergeRefs\";import usePlatformMethods from\"../../modules/usePlatformMethods\";import useResponderEvents from\"../../modules/useResponderEvents\";import{getLocaleDirection,useLocaleContext}from\"../../modules/useLocale\";import StyleSheet from\"../StyleSheet\";import TextInputState from\"../../modules/TextInputState\";var isSelectionStale=function isSelectionStale(node,selection){var selectionEnd=node.selectionEnd,selectionStart=node.selectionStart;var start=selection.start,end=selection.end;return start!==selectionStart||end!==selectionEnd;};var setSelection=function setSelection(node,selection){if(isSelectionStale(node,selection)){var start=selection.start,end=selection.end;try{node.setSelectionRange(start,end||start);}catch(e){}}};var forwardPropsList=Object.assign({},forwardedProps.defaultProps,forwardedProps.accessibilityProps,forwardedProps.clickProps,forwardedProps.focusProps,forwardedProps.keyboardProps,forwardedProps.mouseProps,forwardedProps.touchProps,forwardedProps.styleProps,{autoCapitalize:true,autoComplete:true,autoCorrect:true,autoFocus:true,defaultValue:true,disabled:true,lang:true,maxLength:true,onChange:true,onScroll:true,placeholder:true,pointerEvents:true,readOnly:true,rows:true,spellCheck:true,value:true,type:true});var pickProps=function pickProps(props){return pick(props,forwardPropsList);};function isEventComposing(nativeEvent){return nativeEvent.isComposing||nativeEvent.keyCode===229;}var focusTimeout=null;var TextInput=React.forwardRef(function(props,forwardedRef){var _props$autoCapitalize=props.autoCapitalize,autoCapitalize=_props$autoCapitalize===void 0?'sentences':_props$autoCapitalize,autoComplete=props.autoComplete,autoCompleteType=props.autoCompleteType,_props$autoCorrect=props.autoCorrect,autoCorrect=_props$autoCorrect===void 0?true:_props$autoCorrect,blurOnSubmit=props.blurOnSubmit,clearTextOnFocus=props.clearTextOnFocus,dir=props.dir,_props$editable=props.editable,editable=_props$editable===void 0?true:_props$editable,_props$keyboardType=props.keyboardType,keyboardType=_props$keyboardType===void 0?'default':_props$keyboardType,_props$multiline=props.multiline,multiline=_props$multiline===void 0?false:_props$multiline,_props$numberOfLines=props.numberOfLines,numberOfLines=_props$numberOfLines===void 0?1:_props$numberOfLines,onBlur=props.onBlur,onChange=props.onChange,onChangeText=props.onChangeText,onContentSizeChange=props.onContentSizeChange,onFocus=props.onFocus,onKeyPress=props.onKeyPress,onLayout=props.onLayout,onMoveShouldSetResponder=props.onMoveShouldSetResponder,onMoveShouldSetResponderCapture=props.onMoveShouldSetResponderCapture,onResponderEnd=props.onResponderEnd,onResponderGrant=props.onResponderGrant,onResponderMove=props.onResponderMove,onResponderReject=props.onResponderReject,onResponderRelease=props.onResponderRelease,onResponderStart=props.onResponderStart,onResponderTerminate=props.onResponderTerminate,onResponderTerminationRequest=props.onResponderTerminationRequest,onScrollShouldSetResponder=props.onScrollShouldSetResponder,onScrollShouldSetResponderCapture=props.onScrollShouldSetResponderCapture,onSelectionChange=props.onSelectionChange,onSelectionChangeShouldSetResponder=props.onSelectionChangeShouldSetResponder,onSelectionChangeShouldSetResponderCapture=props.onSelectionChangeShouldSetResponderCapture,onStartShouldSetResponder=props.onStartShouldSetResponder,onStartShouldSetResponderCapture=props.onStartShouldSetResponderCapture,onSubmitEditing=props.onSubmitEditing,placeholderTextColor=props.placeholderTextColor,returnKeyType=props.returnKeyType,_props$secureTextEntr=props.secureTextEntry,secureTextEntry=_props$secureTextEntr===void 0?false:_props$secureTextEntr,selection=props.selection,selectTextOnFocus=props.selectTextOnFocus,spellCheck=props.spellCheck;var type;var inputMode;switch(keyboardType){case'email-address':type='email';break;case'number-pad':case'numeric':inputMode='numeric';break;case'decimal-pad':inputMode='decimal';break;case'phone-pad':type='tel';break;case'search':case'web-search':type='search';break;case'url':type='url';break;default:type='text';}if(secureTextEntry){type='password';}var dimensions=React.useRef({height:null,width:null});var hostRef=React.useRef(null);var handleContentSizeChange=React.useCallback(function(hostNode){if(multiline&&onContentSizeChange&&hostNode!=null){var newHeight=hostNode.scrollHeight;var newWidth=hostNode.scrollWidth;if(newHeight!==dimensions.current.height||newWidth!==dimensions.current.width){dimensions.current.height=newHeight;dimensions.current.width=newWidth;onContentSizeChange({nativeEvent:{contentSize:{height:dimensions.current.height,width:dimensions.current.width}}});}}},[multiline,onContentSizeChange]);var imperativeRef=React.useMemo(function(){return function(hostNode){if(hostNode!=null){hostNode.clear=function(){if(hostNode!=null){hostNode.value='';}};hostNode.isFocused=function(){return hostNode!=null&&TextInputState.currentlyFocusedField()===hostNode;};handleContentSizeChange(hostNode);}};},[handleContentSizeChange]);function handleBlur(e){TextInputState._currentlyFocusedNode=null;if(onBlur){e.nativeEvent.text=e.target.value;onBlur(e);}}function handleChange(e){var hostNode=e.target;var text=hostNode.value;e.nativeEvent.text=text;handleContentSizeChange(hostNode);if(onChange){onChange(e);}if(onChangeText){onChangeText(text);}}function handleFocus(e){var hostNode=e.target;if(onFocus){e.nativeEvent.text=hostNode.value;onFocus(e);}if(hostNode!=null){TextInputState._currentlyFocusedNode=hostNode;if(clearTextOnFocus){hostNode.value='';}if(selectTextOnFocus){if(focusTimeout!=null){clearTimeout(focusTimeout);}focusTimeout=setTimeout(function(){if(hostNode!=null){hostNode.select();}},0);}}}function handleKeyDown(e){var hostNode=e.target;e.stopPropagation();var blurOnSubmitDefault=!multiline;var shouldBlurOnSubmit=blurOnSubmit==null?blurOnSubmitDefault:blurOnSubmit;var nativeEvent=e.nativeEvent;var isComposing=isEventComposing(nativeEvent);if(onKeyPress){onKeyPress(e);}if(e.key==='Enter'&&!e.shiftKey&&!isComposing&&!e.isDefaultPrevented()){if((blurOnSubmit||!multiline)&&onSubmitEditing){e.preventDefault();nativeEvent.text=e.target.value;onSubmitEditing(e);}if(shouldBlurOnSubmit&&hostNode!=null){setTimeout(function(){return hostNode.blur();},0);}}}function handleSelectionChange(e){if(onSelectionChange){try{var node=e.target;var selectionStart=node.selectionStart,selectionEnd=node.selectionEnd;e.nativeEvent.selection={start:selectionStart,end:selectionEnd};e.nativeEvent.text=e.target.value;onSelectionChange(e);}catch(e){}}}useLayoutEffect(function(){var node=hostRef.current;if(node!=null&&selection!=null){setSelection(node,selection);}if(document.activeElement===node){TextInputState._currentlyFocusedNode=node;}},[hostRef,selection]);var component=multiline?'textarea':'input';useElementLayout(hostRef,onLayout);useResponderEvents(hostRef,{onMoveShouldSetResponder:onMoveShouldSetResponder,onMoveShouldSetResponderCapture:onMoveShouldSetResponderCapture,onResponderEnd:onResponderEnd,onResponderGrant:onResponderGrant,onResponderMove:onResponderMove,onResponderReject:onResponderReject,onResponderRelease:onResponderRelease,onResponderStart:onResponderStart,onResponderTerminate:onResponderTerminate,onResponderTerminationRequest:onResponderTerminationRequest,onScrollShouldSetResponder:onScrollShouldSetResponder,onScrollShouldSetResponderCapture:onScrollShouldSetResponderCapture,onSelectionChangeShouldSetResponder:onSelectionChangeShouldSetResponder,onSelectionChangeShouldSetResponderCapture:onSelectionChangeShouldSetResponderCapture,onStartShouldSetResponder:onStartShouldSetResponder,onStartShouldSetResponderCapture:onStartShouldSetResponderCapture});var _useLocaleContext=useLocaleContext(),contextDirection=_useLocaleContext.direction;var supportedProps=pickProps(props);supportedProps.autoCapitalize=autoCapitalize;supportedProps.autoComplete=autoComplete||autoCompleteType||'on';supportedProps.autoCorrect=autoCorrect?'on':'off';supportedProps.dir=dir!==undefined?dir:'auto';supportedProps.enterKeyHint=returnKeyType;supportedProps.inputMode=inputMode;supportedProps.onBlur=handleBlur;supportedProps.onChange=handleChange;supportedProps.onFocus=handleFocus;supportedProps.onKeyDown=handleKeyDown;supportedProps.onSelect=handleSelectionChange;supportedProps.readOnly=!editable;supportedProps.rows=multiline?numberOfLines:undefined;supportedProps.spellCheck=spellCheck!=null?spellCheck:autoCorrect;supportedProps.style=[{'--placeholderTextColor':placeholderTextColor},styles.textinput$raw,styles.placeholder,props.style];supportedProps.type=multiline?undefined:type;var platformMethodsRef=usePlatformMethods(supportedProps);var setRef=useMergeRefs(hostRef,platformMethodsRef,imperativeRef,forwardedRef);supportedProps.ref=setRef;var langDirection=props.lang!=null?getLocaleDirection(props.lang):null;var componentDirection=props.dir||langDirection;var writingDirection=componentDirection||contextDirection;var element=createElement(component,supportedProps,{writingDirection:writingDirection});return element;});TextInput.displayName='TextInput';TextInput.State=TextInputState;var styles=StyleSheet.create({textinput$raw:{MozAppearance:'textfield',WebkitAppearance:'none',backgroundColor:'transparent',border:'0 solid black',borderRadius:0,boxSizing:'border-box',font:'14px System',margin:0,padding:0,resize:'none'},placeholder:{placeholderTextColor:'var(--placeholderTextColor)'}});export default TextInput;","map":{"version":3,"names":["React","createElement","forwardedProps","pick","useElementLayout","useLayoutEffect","useMergeRefs","usePlatformMethods","useResponderEvents","getLocaleDirection","useLocaleContext","StyleSheet","TextInputState","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","Object","assign","defaultProps","accessibilityProps","clickProps","focusProps","keyboardProps","mouseProps","touchProps","styleProps","autoCapitalize","autoComplete","autoCorrect","autoFocus","defaultValue","disabled","lang","maxLength","onChange","onScroll","placeholder","pointerEvents","readOnly","rows","spellCheck","value","type","pickProps","props","isEventComposing","nativeEvent","isComposing","keyCode","focusTimeout","TextInput","forwardRef","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","dir","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onBlur","onChangeText","onContentSizeChange","onFocus","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","useRef","height","width","hostRef","handleContentSizeChange","useCallback","hostNode","newHeight","scrollHeight","newWidth","scrollWidth","current","contentSize","imperativeRef","useMemo","clear","isFocused","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","target","handleChange","handleFocus","clearTimeout","setTimeout","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","key","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","document","activeElement","component","_useLocaleContext","contextDirection","direction","supportedProps","undefined","enterKeyHint","onKeyDown","onSelect","style","styles","textinput$raw","platformMethodsRef","setRef","ref","langDirection","componentDirection","writingDirection","element","displayName","State","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize"],"sources":["C:/Users/ACER/Desktop/Nouveau dossier/signal-clone/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport { getLocaleDirection, useLocaleContext } from '../../modules/useLocale';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\nvar isSelectionStale = (node, selection) => {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = (node, selection) => {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = props => pick(props, forwardPropsList); // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar focusTimeout = null;\nvar TextInput = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(hostNode => {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(() => hostNode => {\n    // TextInput needs to add more methods to the hostNode in addition to those\n    // added by `usePlatformMethods`. This is temporarily until an API like\n    // `TextInput.clear(hostRef)` is added to React Native.\n    if (hostNode != null) {\n      hostNode.clear = function () {\n        if (hostNode != null) {\n          hostNode.value = '';\n        }\n      };\n\n      hostNode.isFocused = function () {\n        return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n      };\n\n      handleContentSizeChange(hostNode);\n    }\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var hostNode = e.target;\n\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        // Safari requires selection to occur in a setTimeout\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n\n        focusTimeout = setTimeout(() => {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    var hostNode = e.target; // Prevent key events bubbling (see #612)\n\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostNode != null) {\n        setTimeout(() => hostNode.blur(), 0);\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(() => {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n\n  var _useLocaleContext = useLocaleContext(),\n      contextDirection = _useLocaleContext.direction;\n\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off'; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.inputMode = inputMode;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = [{\n    '--placeholderTextColor': placeholderTextColor\n  }, styles.textinput$raw, styles.placeholder, props.style];\n  supportedProps.type = multiline ? undefined : type;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var element = createElement(component, supportedProps, {\n    writingDirection\n  });\n  return element;\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = TextInputState;\nvar styles = StyleSheet.create({\n  textinput$raw: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  },\n  placeholder: {\n    placeholderTextColor: 'var(--placeholderTextColor)'\n  }\n});\nexport default TextInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}