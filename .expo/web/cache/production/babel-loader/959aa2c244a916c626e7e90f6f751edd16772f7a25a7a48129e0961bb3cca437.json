{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import Alert from\"react-native-web/dist/exports/Alert\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import React,{useLayoutEffect,useState}from'react';import{Button,Input}from'@rneui/themed';import{AntDesign}from\"@expo/vector-icons\";import{db}from\"../firebase\";import{addDoc,collection}from'firebase/firestore';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddChatScreen=function AddChatScreen(_ref){var navigation=_ref.navigation;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];useLayoutEffect(function(){navigation.setOptions({title:\"Add a new Chat\",headerTitleAlign:\"center\",headerBackTitle:\"Chats\"});},[navigation]);var createChat=function(){var _ref2=_asyncToGenerator(function*(){var dbRef=collection(db,\"chats\");yield addDoc(dbRef,{chatName:input}).then(function(docRef){navigation.goBack();console.log(\"Document has been added successfully\");}).catch(function(error){Alert.alert(\"error\",error.message);console.log(error);});});return function createChat(){return _ref2.apply(this,arguments);};}();return _jsxs(View,{style:styles.container,children:[_jsx(Input,{placeholder:\"Enter a chat name\",autoFocus:true,value:input,onChangeText:setInput,leftIcon:_jsx(AntDesign,{name:\"wechat\",size:24,color:\"black\"})}),_jsx(Button,{onPress:createChat,title:\"Create a New Chat\",disabled:input?false:true})]});};export default AddChatScreen;var styles=StyleSheet.create({container:{flex:1,padding:30,backgroundColor:\"white\"}});","map":{"version":3,"names":["React","useLayoutEffect","useState","Button","Input","AntDesign","db","addDoc","collection","jsx","_jsx","jsxs","_jsxs","AddChatScreen","_ref","navigation","_useState","_useState2","_slicedToArray","input","setInput","setOptions","title","headerTitleAlign","headerBackTitle","createChat","_ref2","_asyncToGenerator","dbRef","chatName","then","docRef","goBack","console","log","catch","error","Alert","alert","message","apply","arguments","View","style","styles","container","children","placeholder","autoFocus","value","onChangeText","leftIcon","name","size","color","onPress","disabled","StyleSheet","create","flex","padding","backgroundColor"],"sources":["C:/Users/ACER/Desktop/Nouveau dossier/signal-clone/screens/AddChatScreen.js"],"sourcesContent":["import { Alert, StyleSheet, View } from 'react-native'\r\nimport React, { useLayoutEffect, useState } from 'react'\r\nimport { Button, Input } from '@rneui/themed'\r\nimport { AntDesign } from \"@expo/vector-icons\"\r\nimport { db } from '../firebase'\r\nimport { addDoc, collection } from 'firebase/firestore'\r\n\r\nconst AddChatScreen = ({ navigation }) => {\r\n  const [input, setInput] = useState(\"\")\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: \"Add a new Chat\",\r\n      headerTitleAlign : \"center\",\r\n      headerBackTitle: \"Chats\"\r\n    })\r\n  }, [navigation])\r\n\r\n  const createChat = async () => {\r\n    const dbRef = collection(db, \"chats\");\r\n    await addDoc(dbRef, {chatName : input})\r\n      .then(docRef => {\r\n        navigation.goBack();\r\n        console.log(\"Document has been added successfully\");\r\n      })\r\n      .catch(error => {\r\n        Alert.alert(\"error\",error.message);\r\n        console.log(error);\r\n      })\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <Input placeholder=\"Enter a chat name\" autoFocus value={input} onChangeText={setInput}\r\n        leftIcon={<AntDesign name=\"wechat\" size={24} color=\"black\" />} />\r\n      <Button onPress={createChat} title=\"Create a New Chat\" disabled={input ? false : true} />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default AddChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 30,\r\n    backgroundColor: \"white\"\r\n  },\r\n  \r\n});\r\n"],"mappings":"qTACA,MAAO,CAAAA,KAAK,EAAIC,eAAe,CAAEC,QAAQ,KAAQ,OAAO,CACxD,OAASC,MAAM,CAAEC,KAAK,KAAQ,eAAe,CAC7C,OAASC,SAAS,KAAQ,oBAAoB,CAC9C,OAASC,EAAE,mBACX,OAASC,MAAM,CAAEC,UAAU,KAAQ,oBAAoB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvD,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAAC,IAAA,CAAuB,IAAjB,CAAAC,UAAU,CAAAD,IAAA,CAAVC,UAAU,CACjC,IAAAC,SAAA,CAA0Bd,QAAQ,CAAC,EAAE,CAAC,CAAAe,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtBhB,eAAe,CAAC,UAAM,CACpBc,UAAU,CAACM,UAAU,CAAC,CACpBC,KAAK,CAAE,gBAAgB,CACvBC,gBAAgB,CAAG,QAAQ,CAC3BC,eAAe,CAAE,OACnB,CAAC,CAAC,CACJ,CAAC,CAAE,CAACT,UAAU,CAAC,CAAC,CAEhB,GAAM,CAAAU,UAAU,gBAAAC,KAAA,CAAAC,iBAAA,CAAG,WAAY,CAC7B,GAAM,CAAAC,KAAK,CAAGpB,UAAU,CAACF,EAAE,CAAE,OAAO,CAAC,CACrC,KAAM,CAAAC,MAAM,CAACqB,KAAK,CAAE,CAACC,QAAQ,CAAGV,KAAK,CAAC,CAAC,CACpCW,IAAI,CAAC,SAAAC,MAAM,CAAI,CACdhB,UAAU,CAACiB,MAAM,EAAE,CACnBC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CACrD,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAC,KAAK,CAAI,CACdC,KAAK,CAACC,KAAK,CAAC,OAAO,CAACF,KAAK,CAACG,OAAO,CAAC,CAClCN,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CACpB,CAAC,CAAC,CACN,CAAC,iBAXK,CAAAX,UAAUA,CAAA,SAAAC,KAAA,CAAAc,KAAA,MAAAC,SAAA,OAWf,CACD,MACE,CAAA7B,KAAA,CAAC8B,IAAI,EAACC,KAAK,CAAEC,MAAM,CAACC,SAAU,CAAAC,QAAA,EAC5BpC,IAAA,CAACN,KAAK,EAAC2C,WAAW,CAAC,mBAAmB,CAACC,SAAS,MAACC,KAAK,CAAE9B,KAAM,CAAC+B,YAAY,CAAE9B,QAAS,CACpF+B,QAAQ,CAAEzC,IAAA,CAACL,SAAS,EAAC+C,IAAI,CAAC,QAAQ,CAACC,IAAI,CAAE,EAAG,CAACC,KAAK,CAAC,OAAO,EAAI,EAAG,CACnE5C,IAAA,CAACP,MAAM,EAACoD,OAAO,CAAE9B,UAAW,CAACH,KAAK,CAAC,mBAAmB,CAACkC,QAAQ,CAAErC,KAAK,CAAG,KAAK,CAAG,IAAK,EAAG,GACpF,CAEX,CAAC,CAED,cAAe,CAAAN,aAAa,CAE5B,GAAM,CAAA+B,MAAM,CAAGa,UAAU,CAACC,MAAM,CAAC,CAC/Bb,SAAS,CAAE,CACTc,IAAI,CAAE,CAAC,CACPC,OAAO,CAAE,EAAE,CACXC,eAAe,CAAE,OACnB,CAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}