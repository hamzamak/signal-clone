{"ast":null,"code":"import*as React from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{initialWindowMetrics,SafeAreaInsetsContext,SafeAreaProvider}from'react-native-safe-area-context';var _Dimensions$get=Dimensions.get('window'),_Dimensions$get$width=_Dimensions$get.width,width=_Dimensions$get$width===void 0?0:_Dimensions$get$width,_Dimensions$get$heigh=_Dimensions$get.height,height=_Dimensions$get$heigh===void 0?0:_Dimensions$get$heigh;var initialMetrics=Platform.OS==='web'||initialWindowMetrics==null?{frame:{x:0,y:0,width:width,height:height},insets:{top:0,left:0,right:0,bottom:0}}:initialWindowMetrics;export default function SafeAreaProviderCompat(_ref){var children=_ref.children,style=_ref.style;return React.createElement(SafeAreaInsetsContext.Consumer,null,function(insets){if(insets){return React.createElement(View,{style:[styles.container,style]},children);}return React.createElement(SafeAreaProvider,{initialMetrics:initialMetrics,style:style},children);});}SafeAreaProviderCompat.initialMetrics=initialMetrics;var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"names":["React","Dimensions","Platform","StyleSheet","View","initialWindowMetrics","SafeAreaInsetsContext","SafeAreaProvider","_Dimensions$get","get","_Dimensions$get$width","width","_Dimensions$get$heigh","height","initialMetrics","OS","frame","x","y","insets","top","left","right","bottom","SafeAreaProviderCompat","_ref","children","style","createElement","Consumer","styles","container","create","flex"],"sources":["C:\\Users\\ACER\\Desktop\\Nouveau dossier\\signal-clone\\node_modules\\@react-navigation\\elements\\src\\SafeAreaProviderCompat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Dimensions,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  initialWindowMetrics,\n  SafeAreaInsetsContext,\n  SafeAreaProvider,\n} from 'react-native-safe-area-context';\n\ntype Props = {\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst { width = 0, height = 0 } = Dimensions.get('window');\n\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics =\n  Platform.OS === 'web' || initialWindowMetrics == null\n    ? {\n        frame: { x: 0, y: 0, width, height },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }\n    : initialWindowMetrics;\n\nexport default function SafeAreaProviderCompat({ children, style }: Props) {\n  return (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return <View style={[styles.container, style]}>{children}</View>;\n        }\n\n        return (\n          <SafeAreaProvider initialMetrics={initialMetrics} style={style}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  );\n}\n\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,UAAA,uDAAAC,QAAA,qDAAAC,UAAA,uDAAAC,IAAA,0CAS9B,OACEC,oBAAoB,CACpBC,qBAAqB,CACrBC,gBAAgB,KACX,gCAAgC,CAOvC,IAAAC,eAAA,CAAkCP,UAAU,CAACQ,GAAG,CAAC,QAAQ,CAAC,CAAAC,qBAAA,CAAAF,eAAA,CAAlDG,KAAK,CAALA,KAAK,CAAAD,qBAAA,UAAG,CAAC,CAAAA,qBAAA,CAAAE,qBAAA,CAAAJ,eAAA,CAAEK,MAAM,CAANA,MAAM,CAAAD,qBAAA,UAAG,EAAAA,qBAAA,CAK5B,GAAM,CAAAE,cAAc,CAClBZ,QAAQ,CAACa,EAAE,GAAK,KAAK,EAAIV,oBAAoB,EAAI,IAAI,CACjD,CACEW,KAAK,CAAE,CAAEC,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,CAAEP,KAAK,CAALA,KAAK,CAAEE,MAAA,CAAAA,MAAO,CAAC,CACpCM,MAAM,CAAE,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CACjD,CAAC,CACDlB,oBAAoB,CAE1B,cAAe,SAAS,CAAAmB,sBAAsBA,CAAAC,IAAA,CAA6B,IAA1B,CAAAC,QAAQ,CAAgBD,IAAA,CAAxBC,QAAQ,CAAEC,KAAA,CAAcF,IAAA,CAAdE,KAAA,CACzD,MACE,CAAA3B,KAAA,CAAA4B,aAAA,CAACtB,qBAAqB,CAACuB,QAAQ,MAC3B,SAAAV,MAAM,CAAK,CACX,GAAIA,MAAM,CAAE,CAIV,MAAO,CAAAnB,KAAA,CAAA4B,aAAA,CAACxB,IAAI,EAACuB,KAAK,CAAE,CAACG,MAAM,CAACC,SAAS,CAAEJ,KAAK,CAAE,EAAED,QAAQ,CAAQ,CAClE,CAEA,MACE,CAAA1B,KAAA,CAAA4B,aAAA,CAACrB,gBAAgB,EAACO,cAAc,CAAEA,cAAe,CAACa,KAAK,CAAEA,KAAM,EAC5DD,QAAQ,CACQ,CAEvB,CAAC,CAC8B,CAErC,CAEAF,sBAAsB,CAACV,cAAc,CAAGA,cAAc,CAEtD,GAAM,CAAAgB,MAAM,CAAG3B,UAAU,CAAC6B,MAAM,CAAC,CAC/BD,SAAS,CAAE,CACTE,IAAI,CAAE,CACR,CACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}