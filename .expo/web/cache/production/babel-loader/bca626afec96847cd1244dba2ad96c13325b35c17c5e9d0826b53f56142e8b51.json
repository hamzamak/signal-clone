{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Alert from\"react-native-web/dist/exports/Alert\";import React,{useEffect,useState}from'react';import{StatusBar}from'expo-status-bar';import{Button,Image,Input}from'@rneui/themed';import logo from\"../assets/signal-logo.png\";import{signInWithEmailAndPassword}from'firebase/auth';import{auth}from\"../firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginScreen=function LoginScreen(_ref){var navigation=_ref.navigation;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];useEffect(function(){var unsubscribe=auth.onAuthStateChanged(function(authUser){if(authUser){navigation.replace('Home');}});return unsubscribe;},[]);var signIn=function(){var _ref2=_asyncToGenerator(function*(){try{yield signInWithEmailAndPassword(auth,email,password);}catch(error){Alert.alert(\"error\",error.message);}});return function signIn(){return _ref2.apply(this,arguments);};}();return _jsxs(KeyboardAvoidingView,{behavior:\"padding\",style:styles.container,children:[_jsx(StatusBar,{style:\"light\"}),_jsx(Image,{source:logo,style:{width:200,height:200}}),_jsxs(View,{style:styles.inputContainer,children:[_jsx(Input,{placeholder:\"Email\",autoFocus:true,value:email,onChangeText:setEmail}),_jsx(Input,{placeholder:\"Password\",secureTextEntry:true,value:password,onChangeText:setPassword})]}),_jsx(Button,{title:\"Login\",onPress:signIn,containerStyle:styles.button}),_jsx(Button,{title:\"Register\",type:\"outline\",onPress:function onPress(){return navigation.navigate('Register');},containerStyle:styles.button})]});};export default LoginScreen;var styles=StyleSheet.create({container:{flex:1,alignItems:\"center\",justifyContent:\"center\",padding:10,backgroundColor:\"white\"},inputContainer:{width:300},button:{width:200,marginTop:10}});","map":{"version":3,"names":["React","useEffect","useState","StatusBar","Button","Image","Input","logo","signInWithEmailAndPassword","auth","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","unsubscribe","onAuthStateChanged","authUser","replace","signIn","_ref2","_asyncToGenerator","error","Alert","alert","message","apply","arguments","KeyboardAvoidingView","behavior","style","styles","container","children","source","width","height","View","inputContainer","placeholder","autoFocus","value","onChangeText","secureTextEntry","title","onPress","containerStyle","button","type","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop"],"sources":["C:/Users/ACER/Desktop/Nouveau dossier/signal-clone/screens/LoginScreen.js"],"sourcesContent":["import { View, Text, StyleSheet, KeyboardAvoidingView, Alert } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { Button, Image, Input } from '@rneui/themed';\r\nimport logo from \"../assets/signal-logo.png\"\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\nconst LoginScreen = ({navigation}) => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    useEffect(()=> {\r\n     const unsubscribe = auth.onAuthStateChanged((authUser)=> {\r\n       // console.log(authUser) \r\n        if (authUser) {\r\n            navigation.replace('Home')\r\n        }\r\n     })\r\n     return unsubscribe ;\r\n    } , [])\r\n    const signIn = async ()=> {\r\n        try {\r\n            await signInWithEmailAndPassword(auth, email, password);\r\n         //   Alert.alert(\"good\",\"goodâœ¨\");\r\n          } catch (error) {\r\n            Alert.alert(\"error\",error.message);\r\n           /* setValue({\r\n              ...value,\r\n              error: error.message,\r\n            });*/\r\n          }\r\n    }\r\n    return (\r\n        <KeyboardAvoidingView behavior='padding'  style={styles.container} >\r\n            <StatusBar style='light' />\r\n            <Image source={logo} style={{ width: 200, height: 200 }} />\r\n            <View style={styles.inputContainer}>\r\n                <Input placeholder=\"Email\" autoFocus value={email} onChangeText={setEmail}  />\r\n                <Input placeholder=\"Password\"  secureTextEntry={true}  value={password} onChangeText={setPassword}   />\r\n            </View>\r\n\r\n            <Button  title=\"Login\" onPress={signIn}  containerStyle={styles.button}/>\r\n            <Button  title=\"Register\" type='outline' onPress={()=> navigation.navigate('Register')}  containerStyle={styles.button}/>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container : {\r\n        flex: 1 ,\r\n        alignItems :\"center\",\r\n        justifyContent : \"center\",\r\n        padding : 10 , \r\n        backgroundColor : \"white\"\r\n    },\r\n    inputContainer: {\r\n     width : 300\r\n    },\r\n    button :{\r\n        width : 200 ,\r\n        marginTop : 10 ,\r\n    }\r\n  });\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}