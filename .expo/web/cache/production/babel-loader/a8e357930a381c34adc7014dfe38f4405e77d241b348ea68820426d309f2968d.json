{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{findFocusedRoute,getActionFromState as getActionFromStateDefault,getPathFromState as getPathFromStateDefault,getStateFromPath as getStateFromPathDefault}from'@react-navigation/core';import isEqual from'fast-deep-equal';import*as React from'react';import createMemoryHistory from\"./createMemoryHistory\";import ServerContext from\"./ServerContext\";var findMatchingState=function findMatchingState(a,b){if(a===undefined||b===undefined||a.key!==b.key){return[undefined,undefined];}var aHistoryLength=a.history?a.history.length:a.routes.length;var bHistoryLength=b.history?b.history.length:b.routes.length;var aRoute=a.routes[a.index];var bRoute=b.routes[b.index];var aChildState=aRoute.state;var bChildState=bRoute.state;if(aHistoryLength!==bHistoryLength||aRoute.key!==bRoute.key||aChildState===undefined||bChildState===undefined||aChildState.key!==bChildState.key){return[a,b];}return findMatchingState(aChildState,bChildState);};var series=function series(cb){var handling=false;var queue=[];var callback=function(){var _ref2=_asyncToGenerator(function*(){try{if(handling){queue.unshift(callback);return;}handling=true;yield cb();}finally{handling=false;if(queue.length){var last=queue.pop();last===null||last===void 0?void 0:last();}}});return function callback(){return _ref2.apply(this,arguments);};}();return callback;};var linkingHandlers=[];export default function useLinking(ref,_ref){var independent=_ref.independent,_ref$enabled=_ref.enabled,enabled=_ref$enabled===void 0?true:_ref$enabled,config=_ref.config,_ref$getStateFromPath=_ref.getStateFromPath,getStateFromPath=_ref$getStateFromPath===void 0?getStateFromPathDefault:_ref$getStateFromPath,_ref$getPathFromState=_ref.getPathFromState,getPathFromState=_ref$getPathFromState===void 0?getPathFromStateDefault:_ref$getPathFromState,_ref$getActionFromSta=_ref.getActionFromState,getActionFromState=_ref$getActionFromSta===void 0?getActionFromStateDefault:_ref$getActionFromSta;React.useEffect(function(){if(process.env.NODE_ENV==='production'){return undefined;}if(independent){return undefined;}if(enabled!==false&&linkingHandlers.length){console.error(['Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",'- Only a single instance of the root component is rendered'].join('\\n').trim());}var handler=Symbol();if(enabled!==false){linkingHandlers.push(handler);}return function(){var index=linkingHandlers.indexOf(handler);if(index>-1){linkingHandlers.splice(index,1);}};},[enabled,independent]);var _React$useState=React.useState(createMemoryHistory),_React$useState2=_slicedToArray(_React$useState,1),history=_React$useState2[0];var enabledRef=React.useRef(enabled);var configRef=React.useRef(config);var getStateFromPathRef=React.useRef(getStateFromPath);var getPathFromStateRef=React.useRef(getPathFromState);var getActionFromStateRef=React.useRef(getActionFromState);React.useEffect(function(){enabledRef.current=enabled;configRef.current=config;getStateFromPathRef.current=getStateFromPath;getPathFromStateRef.current=getPathFromState;getActionFromStateRef.current=getActionFromState;});var server=React.useContext(ServerContext);var getInitialState=React.useCallback(function(){var value;if(enabledRef.current){var _ref3;var _location=(_ref3=server===null||server===void 0?void 0:server.location)!=null?_ref3:typeof window!=='undefined'?window.location:undefined;var path=_location?_location.pathname+_location.search:undefined;if(path){value=getStateFromPathRef.current(path,configRef.current);}}var thenable={then:function then(onfulfilled){return Promise.resolve(onfulfilled?onfulfilled(value):value);},catch:function _catch(){return thenable;}};return thenable;},[]);var previousIndexRef=React.useRef(undefined);var previousStateRef=React.useRef(undefined);var pendingPopStatePathRef=React.useRef(undefined);React.useEffect(function(){previousIndexRef.current=history.index;return history.listen(function(){var _previousIndexRef$cur;var navigation=ref.current;if(!navigation||!enabled){return;}var path=location.pathname+location.search;var index=history.index;var previousIndex=(_previousIndexRef$cur=previousIndexRef.current)!=null?_previousIndexRef$cur:0;previousIndexRef.current=index;pendingPopStatePathRef.current=path;var record=history.get(index);if((record===null||record===void 0?void 0:record.path)===path&&record!==null&&record!==void 0&&record.state){navigation.resetRoot(record.state);return;}var state=getStateFromPathRef.current(path,configRef.current);if(state){var rootState=navigation.getRootState();if(state.routes.some(function(r){return!(rootState!==null&&rootState!==void 0&&rootState.routeNames.includes(r.name));})){console.warn(\"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\");return;}if(index>previousIndex){var action=getActionFromStateRef.current(state,configRef.current);if(action!==undefined){try{navigation.dispatch(action);}catch(e){console.warn(\"An error occurred when trying to handle the link '\"+path+\"': \"+(typeof e==='object'&&e!=null&&'message'in e?e.message:e));}}else{navigation.resetRoot(state);}}else{navigation.resetRoot(state);}}else{navigation.resetRoot(state);}});},[enabled,history,ref]);React.useEffect(function(){var _ref$current;if(!enabled){return;}var getPathForRoute=function getPathForRoute(route,state){if(route!==null&&route!==void 0&&route.path){var stateForPath=getStateFromPathRef.current(route.path,configRef.current);if(stateForPath){var focusedRoute=findFocusedRoute(stateForPath);if(focusedRoute&&focusedRoute.name===route.name&&isEqual(focusedRoute.params,route.params)){return route.path;}}}return getPathFromStateRef.current(state,configRef.current);};if(ref.current){var state=ref.current.getRootState();if(state){var route=findFocusedRoute(state);var path=getPathForRoute(route,state);if(previousStateRef.current===undefined){previousStateRef.current=state;}history.replace({path:path,state:state});}}var onStateChange=function(){var _ref4=_asyncToGenerator(function*(){var navigation=ref.current;if(!navigation||!enabled){return;}var previousState=previousStateRef.current;var state=navigation.getRootState();if(!state){return;}var pendingPath=pendingPopStatePathRef.current;var route=findFocusedRoute(state);var path=getPathForRoute(route,state);previousStateRef.current=state;pendingPopStatePathRef.current=undefined;var _findMatchingState=findMatchingState(previousState,state),_findMatchingState2=_slicedToArray(_findMatchingState,2),previousFocusedState=_findMatchingState2[0],focusedState=_findMatchingState2[1];if(previousFocusedState&&focusedState&&path!==pendingPath){var historyDelta=(focusedState.history?focusedState.history.length:focusedState.routes.length)-(previousFocusedState.history?previousFocusedState.history.length:previousFocusedState.routes.length);if(historyDelta>0){history.push({path:path,state:state});}else if(historyDelta<0){var nextIndex=history.backIndex({path:path});var currentIndex=history.index;try{if(nextIndex!==-1&&nextIndex<currentIndex){yield history.go(nextIndex-currentIndex);}else{yield history.go(historyDelta);}history.replace({path:path,state:state});}catch(e){}}else{history.replace({path:path,state:state});}}else{history.replace({path:path,state:state});}});return function onStateChange(){return _ref4.apply(this,arguments);};}();return(_ref$current=ref.current)===null||_ref$current===void 0?void 0:_ref$current.addListener('state',series(onStateChange));},[enabled,history,ref]);return{getInitialState:getInitialState};}","map":{"version":3,"names":["findFocusedRoute","getActionFromState","getActionFromStateDefault","getPathFromState","getPathFromStateDefault","getStateFromPath","getStateFromPathDefault","isEqual","React","createMemoryHistory","ServerContext","findMatchingState","a","b","undefined","key","aHistoryLength","history","length","routes","bHistoryLength","aRoute","index","bRoute","aChildState","state","bChildState","series","cb","handling","queue","callback","_ref2","_asyncToGenerator","unshift","last","pop","apply","arguments","linkingHandlers","useLinking","ref","_ref","independent","_ref$enabled","enabled","config","_ref$getStateFromPath","_ref$getPathFromState","_ref$getActionFromSta","useEffect","process","env","NODE_ENV","console","error","join","trim","handler","Symbol","push","indexOf","splice","_React$useState","useState","_React$useState2","_slicedToArray","enabledRef","useRef","configRef","getStateFromPathRef","getPathFromStateRef","getActionFromStateRef","current","server","useContext","getInitialState","useCallback","value","_ref3","location","window","path","pathname","search","thenable","then","onfulfilled","Promise","resolve","catch","_catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","listen","_previousIndexRef$cur","navigation","previousIndex","record","get","resetRoot","rootState","getRootState","some","r","routeNames","includes","name","warn","action","dispatch","e","message","_ref$current","getPathForRoute","route","stateForPath","focusedRoute","params","replace","onStateChange","_ref4","previousState","pendingPath","_findMatchingState","_findMatchingState2","previousFocusedState","focusedState","historyDelta","nextIndex","backIndex","currentIndex","go","addListener"],"sources":["C:\\Users\\ACER\\Desktop\\Nouveau dossier\\signal-clone\\node_modules\\@react-navigation\\native\\src\\useLinking.tsx"],"sourcesContent":["import {\n  findFocusedRoute,\n  getActionFromState as getActionFromStateDefault,\n  getPathFromState as getPathFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  NavigationState,\n  ParamListBase,\n} from '@react-navigation/core';\nimport isEqual from 'fast-deep-equal';\nimport * as React from 'react';\n\nimport createMemoryHistory from './createMemoryHistory';\nimport ServerContext from './ServerContext';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\n/**\n * Find the matching navigation state that changed between 2 navigation states\n * e.g.: a -> b -> c -> d and a -> b -> c -> e -> f, if history in b changed, b is the matching state\n */\nconst findMatchingState = <T extends NavigationState>(\n  a: T | undefined,\n  b: T | undefined\n): [T | undefined, T | undefined] => {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n\n  // Tab and drawer will have `history` property, but stack will have history in `routes`\n  const aHistoryLength = a.history ? a.history.length : a.routes.length;\n  const bHistoryLength = b.history ? b.history.length : b.routes.length;\n\n  const aRoute = a.routes[a.index];\n  const bRoute = b.routes[b.index];\n\n  const aChildState = aRoute.state as T | undefined;\n  const bChildState = bRoute.state as T | undefined;\n\n  // Stop here if this is the state object that changed:\n  // - history length is different\n  // - focused routes are different\n  // - one of them doesn't have child state\n  // - child state keys are different\n  if (\n    aHistoryLength !== bHistoryLength ||\n    aRoute.key !== bRoute.key ||\n    aChildState === undefined ||\n    bChildState === undefined ||\n    aChildState.key !== bChildState.key\n  ) {\n    return [a, b];\n  }\n\n  return findMatchingState(aChildState, bChildState);\n};\n\n/**\n * Run async function in series as it's called.\n */\nconst series = (cb: () => Promise<void>) => {\n  // Whether we're currently handling a callback\n  let handling = false;\n  let queue: (() => Promise<void>)[] = [];\n\n  const callback = async () => {\n    try {\n      if (handling) {\n        // If we're currently handling a previous event, wait before handling this one\n        // Add the callback to the beginning of the queue\n        queue.unshift(callback);\n        return;\n      }\n\n      handling = true;\n\n      await cb();\n    } finally {\n      handling = false;\n\n      if (queue.length) {\n        // If we have queued items, handle the last one\n        const last = queue.pop();\n\n        last?.();\n      }\n    }\n  };\n\n  return callback;\n};\n\nlet linkingHandlers: Symbol[] = [];\n\ntype Options = LinkingOptions<ParamListBase> & {\n  independent?: boolean;\n};\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    independent,\n    enabled = true,\n    config,\n    getStateFromPath = getStateFromPathDefault,\n    getPathFromState = getPathFromStateDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n          '- Only a single instance of the root component is rendered',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    }\n\n    const handler = Symbol();\n\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n\n    return () => {\n      const index = linkingHandlers.indexOf(handler);\n\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n\n  const [history] = React.useState(createMemoryHistory);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const configRef = React.useRef(config);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getPathFromStateRef = React.useRef(getPathFromState);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getPathFromStateRef.current = getPathFromState;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const server = React.useContext(ServerContext);\n\n  const getInitialState = React.useCallback(() => {\n    let value: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const location =\n        server?.location ??\n        (typeof window !== 'undefined' ? window.location : undefined);\n\n      const path = location ? location.pathname + location.search : undefined;\n\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const previousIndexRef = React.useRef<number | undefined>(undefined);\n  const previousStateRef = React.useRef<NavigationState | undefined>(undefined);\n  const pendingPopStatePathRef = React.useRef<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    previousIndexRef.current = history.index;\n\n    return history.listen(() => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const path = location.pathname + location.search;\n      const index = history.index;\n\n      const previousIndex = previousIndexRef.current ?? 0;\n\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n\n      // When browser back/forward is clicked, we first need to check if state object for this index exists\n      // If it does we'll reset to that state object\n      // Otherwise, we'll handle it like a regular deep link\n      const record = history.get(index);\n\n      if (record?.path === path && record?.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n\n      const state = getStateFromPathRef.current(path, configRef.current);\n\n      // We should only dispatch an action when going forward\n      // Otherwise the action will likely add items to history, which would mess things up\n      if (state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        if (index > previousIndex) {\n          const action = getActionFromStateRef.current(\n            state,\n            configRef.current\n          );\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${\n                  typeof e === 'object' && e != null && 'message' in e\n                    ? // @ts-expect-error: we're already checking for this\n                      e.message\n                    : e\n                }`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        // if current path didn't return any state, we should revert to initial state\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const getPathForRoute = (\n      route: ReturnType<typeof findFocusedRoute>,\n      state: NavigationState\n    ): string => {\n      // If the `route` object contains a `path`, use that path as long as `route.name` and `params` still match\n      // This makes sure that we preserve the original URL for wildcard routes\n      if (route?.path) {\n        const stateForPath = getStateFromPathRef.current(\n          route.path,\n          configRef.current\n        );\n\n        if (stateForPath) {\n          const focusedRoute = findFocusedRoute(stateForPath);\n\n          if (\n            focusedRoute &&\n            focusedRoute.name === route.name &&\n            isEqual(focusedRoute.params, route.params)\n          ) {\n            return route.path;\n          }\n        }\n      }\n\n      return getPathFromStateRef.current(state, configRef.current);\n    };\n\n    if (ref.current) {\n      // We need to record the current metadata on the first render if they aren't set\n      // This will allow the initial state to be in the history entry\n      const state = ref.current.getRootState();\n\n      if (state) {\n        const route = findFocusedRoute(state);\n        const path = getPathForRoute(route, state);\n\n        if (previousStateRef.current === undefined) {\n          previousStateRef.current = state;\n        }\n\n        history.replace({ path, state });\n      }\n    }\n\n    const onStateChange = async () => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const previousState = previousStateRef.current;\n      const state = navigation.getRootState();\n\n      // root state may not available, for example when root navigators switch inside the container\n      if (!state) {\n        return;\n      }\n\n      const pendingPath = pendingPopStatePathRef.current;\n      const route = findFocusedRoute(state);\n      const path = getPathForRoute(route, state);\n\n      previousStateRef.current = state;\n      pendingPopStatePathRef.current = undefined;\n\n      // To detect the kind of state change, we need to:\n      // - Find the common focused navigation state in previous and current state\n      // - If only the route keys changed, compare history/routes.length to check if we go back/forward/replace\n      // - If no common focused navigation state found, it's a replace\n      const [previousFocusedState, focusedState] = findMatchingState(\n        previousState,\n        state\n      );\n\n      if (\n        previousFocusedState &&\n        focusedState &&\n        // We should only handle push/pop if path changed from what was in last `popstate`\n        // Otherwise it's likely a change triggered by `popstate`\n        path !== pendingPath\n      ) {\n        const historyDelta =\n          (focusedState.history\n            ? focusedState.history.length\n            : focusedState.routes.length) -\n          (previousFocusedState.history\n            ? previousFocusedState.history.length\n            : previousFocusedState.routes.length);\n\n        if (historyDelta > 0) {\n          // If history length is increased, we should pushState\n          // Note that path might not actually change here, for example, drawer open should pushState\n          history.push({ path, state });\n        } else if (historyDelta < 0) {\n          // If history length is decreased, i.e. entries were removed, we want to go back\n\n          const nextIndex = history.backIndex({ path });\n          const currentIndex = history.index;\n\n          try {\n            if (nextIndex !== -1 && nextIndex < currentIndex) {\n              // An existing entry for this path exists and it's less than current index, go back to that\n              await history.go(nextIndex - currentIndex);\n            } else {\n              // We couldn't find an existing entry to go back to, so we'll go back by the delta\n              // This won't be correct if multiple routes were pushed in one go before\n              // Usually this shouldn't happen and this is a fallback for that\n              await history.go(historyDelta);\n            }\n\n            // Store the updated state as well as fix the path if incorrect\n            history.replace({ path, state });\n          } catch (e) {\n            // The navigation was interrupted\n          }\n        } else {\n          // If history length is unchanged, we want to replaceState\n          history.replace({ path, state });\n        }\n      } else {\n        // If no common navigation state was found, assume it's a replace\n        // This would happen if the user did a reset/conditionally changed navigators\n        history.replace({ path, state });\n      }\n    };\n\n    // We debounce onStateChange coz we don't want multiple state changes to be handled at one time\n    // This could happen since `history.go(n)` is asynchronous\n    // If `pushState` or `replaceState` were called before `history.go(n)` completes, it'll mess stuff up\n    return ref.current?.addListener('state', series(onStateChange));\n  }, [enabled, history, ref]);\n\n  return {\n    getInitialState,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}