{"ast":null,"code":"import{useNavigation,useRoute}from'@react-navigation/core';import*as React from'react';function getScrollableNode(ref){if(ref.current==null){return null;}if('scrollToTop'in ref.current||'scrollTo'in ref.current||'scrollToOffset'in ref.current||'scrollResponderScrollTo'in ref.current){return ref.current;}else if('getScrollResponder'in ref.current){return ref.current.getScrollResponder();}else if('getNode'in ref.current){return ref.current.getNode();}else{return ref.current;}}export default function useScrollToTop(ref){var navigation=useNavigation();var route=useRoute();React.useEffect(function(){var tabNavigations=[];var currentNavigation=navigation;while(currentNavigation){if(currentNavigation.getState().type==='tab'){tabNavigations.push(currentNavigation);}currentNavigation=currentNavigation.getParent();}if(tabNavigations.length===0){return;}var unsubscribers=tabNavigations.map(function(tab){return tab.addListener('tabPress',function(e){var isFocused=navigation.isFocused();var isFirst=tabNavigations.includes(navigation)||navigation.getState().routes[0].key===route.key;requestAnimationFrame(function(){var scrollable=getScrollableNode(ref);if(isFocused&&isFirst&&scrollable&&!e.defaultPrevented){if('scrollToTop'in scrollable){scrollable.scrollToTop();}else if('scrollTo'in scrollable){scrollable.scrollTo({y:0,animated:true});}else if('scrollToOffset'in scrollable){scrollable.scrollToOffset({offset:0,animated:true});}else if('scrollResponderScrollTo'in scrollable){scrollable.scrollResponderScrollTo({y:0,animated:true});}}});});});return function(){unsubscribers.forEach(function(unsubscribe){return unsubscribe();});};},[navigation,ref,route.key]);}","map":{"version":3,"names":["useNavigation","useRoute","React","getScrollableNode","ref","current","getScrollResponder","getNode","useScrollToTop","navigation","route","useEffect","tabNavigations","currentNavigation","getState","type","push","getParent","length","unsubscribers","map","tab","addListener","e","isFocused","isFirst","includes","routes","key","requestAnimationFrame","scrollable","defaultPrevented","scrollToTop","scrollTo","y","animated","scrollToOffset","offset","scrollResponderScrollTo","forEach","unsubscribe"],"sources":["C:\\Users\\ACER\\Desktop\\Nouveau dossier\\signal-clone\\node_modules\\@react-navigation\\native\\src\\useScrollToTop.tsx"],"sourcesContent":["import {\n  EventArg,\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport type { ScrollView } from 'react-native';\n\ntype ScrollOptions = { x?: number; y?: number; animated?: boolean };\n\ntype ScrollableView =\n  | { scrollToTop(): void }\n  | { scrollTo(options: ScrollOptions): void }\n  | { scrollToOffset(options: { offset?: number; animated?: boolean }): void }\n  | { scrollResponderScrollTo(options: ScrollOptions): void };\n\ntype ScrollableWrapper =\n  | { getScrollResponder(): React.ReactNode | ScrollView }\n  | { getNode(): ScrollableView }\n  | ScrollableView;\n\nfunction getScrollableNode(ref: React.RefObject<ScrollableWrapper>) {\n  if (ref.current == null) {\n    return null;\n  }\n\n  if (\n    'scrollToTop' in ref.current ||\n    'scrollTo' in ref.current ||\n    'scrollToOffset' in ref.current ||\n    'scrollResponderScrollTo' in ref.current\n  ) {\n    // This is already a scrollable node.\n    return ref.current;\n  } else if ('getScrollResponder' in ref.current) {\n    // If the view is a wrapper like FlatList, SectionList etc.\n    // We need to use `getScrollResponder` to get access to the scroll responder\n    return ref.current.getScrollResponder();\n  } else if ('getNode' in ref.current) {\n    // When a `ScrollView` is wraped in `Animated.createAnimatedComponent`\n    // we need to use `getNode` to get the ref to the actual scrollview.\n    // Note that `getNode` is deprecated in newer versions of react-native\n    // this is why we check if we already have a scrollable node above.\n    return ref.current.getNode();\n  } else {\n    return ref.current;\n  }\n}\n\nexport default function useScrollToTop(\n  ref: React.RefObject<ScrollableWrapper>\n) {\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  React.useEffect(() => {\n    let tabNavigations: NavigationProp<ReactNavigation.RootParamList>[] = [];\n    let currentNavigation = navigation;\n\n    // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n    // So we need to find all the parent tab navigators and add the listeners there\n    while (currentNavigation) {\n      if (currentNavigation.getState().type === 'tab') {\n        tabNavigations.push(currentNavigation);\n      }\n\n      currentNavigation = currentNavigation.getParent();\n    }\n\n    if (tabNavigations.length === 0) {\n      return;\n    }\n\n    const unsubscribers = tabNavigations.map((tab) => {\n      return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error\n        'tabPress',\n        (e: EventArg<'tabPress', true>) => {\n          // We should scroll to top only when the screen is focused\n          const isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          const isFirst =\n            tabNavigations.includes(navigation) ||\n            navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(() => {\n            const scrollable = getScrollableNode(ref) as ScrollableWrapper;\n\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({ y: 0, animated: true });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({ offset: 0, animated: true });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({ y: 0, animated: true });\n              }\n            }\n          });\n        }\n      );\n    });\n\n    return () => {\n      unsubscribers.forEach((unsubscribe) => unsubscribe());\n    };\n  }, [navigation, ref, route.key]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}