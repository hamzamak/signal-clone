{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";var _excluded=[\"children\",\"screenListeners\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import{isValidElementType}from'react-is';import Group from\"./Group\";import isArrayEqual from\"./isArrayEqual\";import isRecordEqual from\"./isRecordEqual\";import NavigationHelpersContext from\"./NavigationHelpersContext\";import NavigationRouteContext from\"./NavigationRouteContext\";import NavigationStateContext from\"./NavigationStateContext\";import PreventRemoveProvider from\"./PreventRemoveProvider\";import Screen from\"./Screen\";import{PrivateValueStore}from\"./types\";import useChildListeners from\"./useChildListeners\";import useComponent from\"./useComponent\";import useCurrentRender from\"./useCurrentRender\";import useDescriptors from\"./useDescriptors\";import useEventEmitter from\"./useEventEmitter\";import useFocusedListenersChildrenAdapter from\"./useFocusedListenersChildrenAdapter\";import useFocusEvents from\"./useFocusEvents\";import useKeyedChildListeners from\"./useKeyedChildListeners\";import useNavigationHelpers from\"./useNavigationHelpers\";import useOnAction from\"./useOnAction\";import useOnGetState from\"./useOnGetState\";import useOnRouteFocus from\"./useOnRouteFocus\";import useRegisterNavigator from\"./useRegisterNavigator\";import useScheduleUpdate from\"./useScheduleUpdate\";PrivateValueStore;var isValidKey=function isValidKey(key){return key===undefined||typeof key==='string'&&key!=='';};var getRouteConfigsFromChildren=function getRouteConfigsFromChildren(children,groupKey,groupOptions){var configs=React.Children.toArray(children).reduce(function(acc,child){var _child$type,_child$props;if(React.isValidElement(child)){if(child.type===Screen){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the screen '\"+child.props.name+\"'. It must be a non-empty string or 'undefined'.\");}acc.push({keys:[groupKey,child.props.navigationKey],options:groupOptions,props:child.props});return acc;}if(child.type===React.Fragment||child.type===Group){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the group. It must be a non-empty string or 'undefined'.\");}acc.push.apply(acc,_toConsumableArray(getRouteConfigsFromChildren(child.props.children,child.props.navigationKey,child.type!==Group?groupOptions:groupOptions!=null?[].concat(_toConsumableArray(groupOptions),[child.props.screenOptions]):[child.props.screenOptions])));return acc;}}throw new Error(\"A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found \"+(React.isValidElement(child)?\"'\"+(typeof child.type==='string'?child.type:(_child$type=child.type)===null||_child$type===void 0?void 0:_child$type.name)+\"'\"+((_child$props=child.props)!==null&&_child$props!==void 0&&_child$props.name?\" for the screen '\"+child.props.name+\"'\":''):typeof child==='object'?JSON.stringify(child):\"'\"+String(child)+\"'\")+\"). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.\");},[]);if(process.env.NODE_ENV!=='production'){configs.forEach(function(config){var _config$props=config.props,name=_config$props.name,children=_config$props.children,component=_config$props.component,getComponent=_config$props.getComponent;if(typeof name!=='string'||!name){throw new Error(\"Got an invalid name (\"+JSON.stringify(name)+\") for the screen. It must be a non-empty string.\");}if(children!=null||component!==undefined||getComponent!==undefined){if(children!=null&&component!==undefined){throw new Error(\"Got both 'component' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&getComponent!==undefined){throw new Error(\"Got both 'getComponent' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(component!==undefined&&getComponent!==undefined){throw new Error(\"Got both 'component' and 'getComponent' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&typeof children!=='function'){throw new Error(\"Got an invalid value for 'children' prop for the screen '\"+name+\"'. It must be a function returning a React Element.\");}if(component!==undefined&&!isValidElementType(component)){throw new Error(\"Got an invalid value for 'component' prop for the screen '\"+name+\"'. It must be a valid React Component.\");}if(getComponent!==undefined&&typeof getComponent!=='function'){throw new Error(\"Got an invalid value for 'getComponent' prop for the screen '\"+name+\"'. It must be a function returning a React Component.\");}if(typeof component==='function'){if(component.name==='component'){console.warn(\"Looks like you're passing an inline function for 'component' prop for the screen '\"+name+\"' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.\");}else if(/^[a-z]/.test(component.name)){console.warn(\"Got a component with the name '\"+component.name+\"' for the screen '\"+name+\"'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.\");}}}else{throw new Error(\"Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '\"+name+\"'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.\");}});}return configs;};export default function useNavigationBuilder(createRouter,options){var navigatorKey=useRegisterNavigator();var route=React.useContext(NavigationRouteContext);var children=options.children,screenListeners=options.screenListeners,rest=_objectWithoutProperties(options,_excluded);var _React$useRef=React.useRef(createRouter(_objectSpread(_objectSpread({},rest),route!==null&&route!==void 0&&route.params&&route.params.state==null&&route.params.initial!==false&&typeof route.params.screen==='string'?{initialRouteName:route.params.screen}:null))),router=_React$useRef.current;var routeConfigs=getRouteConfigsFromChildren(children);var screens=routeConfigs.reduce(function(acc,config){if(config.props.name in acc){throw new Error(\"A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '\"+config.props.name+\"')\");}acc[config.props.name]=config;return acc;},{});var routeNames=routeConfigs.map(function(config){return config.props.name;});var routeKeyList=routeNames.reduce(function(acc,curr){acc[curr]=screens[curr].keys.map(function(key){return key!=null?key:'';}).join(':');return acc;},{});var routeParamList=routeNames.reduce(function(acc,curr){var initialParams=screens[curr].props.initialParams;acc[curr]=initialParams;return acc;},{});var routeGetIdList=routeNames.reduce(function(acc,curr){return Object.assign(acc,_defineProperty({},curr,screens[curr].props.getId));},{});if(!routeNames.length){throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");}var isStateValid=React.useCallback(function(state){return state.type===undefined||state.type===router.type;},[router.type]);var isStateInitialized=React.useCallback(function(state){return state!==undefined&&state.stale===false&&isStateValid(state);},[isStateValid]);var _React$useContext=React.useContext(NavigationStateContext),currentState=_React$useContext.state,getCurrentState=_React$useContext.getState,setCurrentState=_React$useContext.setState,setKey=_React$useContext.setKey,getKey=_React$useContext.getKey,getIsInitial=_React$useContext.getIsInitial;var stateCleanedUp=React.useRef(false);var cleanUpState=React.useCallback(function(){setCurrentState(undefined);stateCleanedUp.current=true;},[setCurrentState]);var setState=React.useCallback(function(state){if(stateCleanedUp.current){return;}setCurrentState(state);},[setCurrentState]);var _React$useMemo=React.useMemo(function(){var _route$params4;var initialRouteParamList=routeNames.reduce(function(acc,curr){var _route$params,_route$params2,_route$params3;var initialParams=screens[curr].props.initialParams;var initialParamsFromParams=(route===null||route===void 0?void 0:(_route$params=route.params)===null||_route$params===void 0?void 0:_route$params.state)==null&&(route===null||route===void 0?void 0:(_route$params2=route.params)===null||_route$params2===void 0?void 0:_route$params2.initial)!==false&&(route===null||route===void 0?void 0:(_route$params3=route.params)===null||_route$params3===void 0?void 0:_route$params3.screen)===curr?route.params.params:undefined;acc[curr]=initialParams!==undefined||initialParamsFromParams!==undefined?_objectSpread(_objectSpread({},initialParams),initialParamsFromParams):undefined;return acc;},{});if((currentState===undefined||!isStateValid(currentState))&&(route===null||route===void 0?void 0:(_route$params4=route.params)===null||_route$params4===void 0?void 0:_route$params4.state)==null){return[router.getInitialState({routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),true];}else{var _ref;var _route$params5;return[router.getRehydratedState((_ref=route===null||route===void 0?void 0:(_route$params5=route.params)===null||_route$params5===void 0?void 0:_route$params5.state)!=null?_ref:currentState,{routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),false];}},[currentState,router,isStateValid]),_React$useMemo2=_slicedToArray(_React$useMemo,2),initializedState=_React$useMemo2[0],isFirstStateInitialization=_React$useMemo2[1];var previousRouteKeyListRef=React.useRef(routeKeyList);React.useEffect(function(){previousRouteKeyListRef.current=routeKeyList;});var previousRouteKeyList=previousRouteKeyListRef.current;var state=isStateInitialized(currentState)?currentState:initializedState;var nextState=state;if(!isArrayEqual(state.routeNames,routeNames)||!isRecordEqual(routeKeyList,previousRouteKeyList)){nextState=router.getStateForRouteNamesChange(state,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList,routeKeyChanges:Object.keys(routeKeyList).filter(function(name){return previousRouteKeyList.hasOwnProperty(name)&&routeKeyList[name]!==previousRouteKeyList[name];})});}var previousNestedParamsRef=React.useRef(route===null||route===void 0?void 0:route.params);React.useEffect(function(){previousNestedParamsRef.current=route===null||route===void 0?void 0:route.params;},[route===null||route===void 0?void 0:route.params]);if(route!==null&&route!==void 0&&route.params){var previousParams=previousNestedParamsRef.current;var action;if(typeof route.params.state==='object'&&route.params.state!=null&&route.params!==previousParams){action=CommonActions.reset(route.params.state);}else if(typeof route.params.screen==='string'&&(route.params.initial===false&&isFirstStateInitialization||route.params!==previousParams)){action=CommonActions.navigate({name:route.params.screen,params:route.params.params,path:route.params.path});}var updatedState=action?router.getStateForAction(nextState,action,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):null;nextState=updatedState!==null?router.getRehydratedState(updatedState,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):nextState;}var shouldUpdate=state!==nextState;useScheduleUpdate(function(){if(shouldUpdate){setState(nextState);}});state=nextState;React.useEffect(function(){setKey(navigatorKey);if(!getIsInitial()){setState(nextState);}return function(){setTimeout(function(){if(getCurrentState()!==undefined&&getKey()===navigatorKey){cleanUpState();}},0);};},[]);var initializedStateRef=React.useRef();initializedStateRef.current=initializedState;var getState=React.useCallback(function(){var currentState=getCurrentState();return isStateInitialized(currentState)?currentState:initializedStateRef.current;},[getCurrentState,isStateInitialized]);var emitter=useEventEmitter(function(e){var _ref2;var routeNames=[];var route;if(e.target){var _route;route=state.routes.find(function(route){return route.key===e.target;});if((_route=route)!==null&&_route!==void 0&&_route.name){routeNames.push(route.name);}}else{route=state.routes[state.index];routeNames.push.apply(routeNames,_toConsumableArray(Object.keys(screens).filter(function(name){var _route2;return((_route2=route)===null||_route2===void 0?void 0:_route2.name)===name;})));}if(route==null){return;}var navigation=descriptors[route.key].navigation;var listeners=(_ref2=[]).concat.apply(_ref2,_toConsumableArray([screenListeners].concat(_toConsumableArray(routeNames.map(function(name){var listeners=screens[name].props.listeners;return listeners;}))).map(function(listeners){var map=typeof listeners==='function'?listeners({route:route,navigation:navigation}):listeners;return map?Object.keys(map).filter(function(type){return type===e.type;}).map(function(type){return map===null||map===void 0?void 0:map[type];}):undefined;}))).filter(function(cb,i,self){return cb&&self.lastIndexOf(cb)===i;});listeners.forEach(function(listener){return listener===null||listener===void 0?void 0:listener(e);});});useFocusEvents({state:state,emitter:emitter});React.useEffect(function(){emitter.emit({type:'state',data:{state:state}});},[emitter,state]);var _useChildListeners=useChildListeners(),childListeners=_useChildListeners.listeners,addListener=_useChildListeners.addListener;var _useKeyedChildListene=useKeyedChildListeners(),keyedListeners=_useKeyedChildListene.keyedListeners,addKeyedListener=_useKeyedChildListene.addKeyedListener;var onAction=useOnAction({router:router,getState:getState,setState:setState,key:route===null||route===void 0?void 0:route.key,actionListeners:childListeners.action,beforeRemoveListeners:keyedListeners.beforeRemove,routerConfigOptions:{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList},emitter:emitter});var onRouteFocus=useOnRouteFocus({router:router,key:route===null||route===void 0?void 0:route.key,getState:getState,setState:setState});var navigation=useNavigationHelpers({id:options.id,onAction:onAction,getState:getState,emitter:emitter,router:router});useFocusedListenersChildrenAdapter({navigation:navigation,focusedListeners:childListeners.focus});useOnGetState({getState:getState,getStateListeners:keyedListeners.getState});var descriptors=useDescriptors({state:state,screens:screens,navigation:navigation,screenOptions:options.screenOptions,defaultScreenOptions:options.defaultScreenOptions,onAction:onAction,getState:getState,setState:setState,onRouteFocus:onRouteFocus,addListener:addListener,addKeyedListener:addKeyedListener,router:router,emitter:emitter});useCurrentRender({state:state,navigation:navigation,descriptors:descriptors});var NavigationContent=useComponent(function(children){return React.createElement(NavigationHelpersContext.Provider,{value:navigation},React.createElement(PreventRemoveProvider,null,children));});return{state:state,navigation:navigation,descriptors:descriptors,NavigationContent:NavigationContent};}","map":{"version":3,"names":["CommonActions","React","isValidElementType","Group","isArrayEqual","isRecordEqual","NavigationHelpersContext","NavigationRouteContext","NavigationStateContext","PreventRemoveProvider","Screen","PrivateValueStore","useChildListeners","useComponent","useCurrentRender","useDescriptors","useEventEmitter","useFocusedListenersChildrenAdapter","useFocusEvents","useKeyedChildListeners","useNavigationHelpers","useOnAction","useOnGetState","useOnRouteFocus","useRegisterNavigator","useScheduleUpdate","isValidKey","key","undefined","getRouteConfigsFromChildren","children","groupKey","groupOptions","configs","Children","toArray","reduce","acc","child","_child$type","_child$props","isValidElement","type","props","navigationKey","Error","JSON","stringify","name","push","keys","options","Fragment","apply","_toConsumableArray","concat","screenOptions","String","process","env","NODE_ENV","forEach","config","_config$props","component","getComponent","console","warn","test","useNavigationBuilder","createRouter","navigatorKey","route","useContext","screenListeners","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","_objectSpread","params","state","initial","screen","initialRouteName","router","current","routeConfigs","screens","routeNames","map","routeKeyList","curr","join","routeParamList","initialParams","routeGetIdList","Object","assign","_defineProperty","getId","length","isStateValid","useCallback","isStateInitialized","stale","_React$useContext","currentState","getCurrentState","getState","setCurrentState","setState","setKey","getKey","getIsInitial","stateCleanedUp","cleanUpState","_React$useMemo","useMemo","_route$params4","initialRouteParamList","_route$params","_route$params2","_route$params3","initialParamsFromParams","getInitialState","_ref","_route$params5","getRehydratedState","_React$useMemo2","_slicedToArray","initializedState","isFirstStateInitialization","previousRouteKeyListRef","useEffect","previousRouteKeyList","nextState","getStateForRouteNamesChange","routeKeyChanges","filter","hasOwnProperty","previousNestedParamsRef","previousParams","action","reset","navigate","path","updatedState","getStateForAction","shouldUpdate","setTimeout","initializedStateRef","emitter","e","_ref2","target","_route","routes","find","index","_route2","navigation","descriptors","listeners","cb","i","self","lastIndexOf","listener","emit","data","_useChildListeners","childListeners","addListener","_useKeyedChildListene","keyedListeners","addKeyedListener","onAction","actionListeners","beforeRemoveListeners","beforeRemove","routerConfigOptions","onRouteFocus","id","focusedListeners","focus","getStateListeners","defaultScreenOptions","NavigationContent","createElement","Provider","value"],"sources":["C:\\Users\\ACER\\Desktop\\Nouveau dossier\\signal-clone\\node_modules\\@react-navigation\\core\\src\\useNavigationBuilder.tsx"],"sourcesContent":["import {\n  CommonActions,\n  DefaultRouterOptions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n  RouterConfigOptions,\n  RouterFactory,\n} from '@react-navigation/routers';\nimport * as React from 'react';\nimport { isValidElementType } from 'react-is';\n\nimport Group from './Group';\nimport isArrayEqual from './isArrayEqual';\nimport isRecordEqual from './isRecordEqual';\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport PreventRemoveProvider from './PreventRemoveProvider';\nimport Screen from './Screen';\nimport {\n  DefaultNavigatorOptions,\n  EventMapBase,\n  EventMapCore,\n  NavigatorScreenParams,\n  PrivateValueStore,\n  RouteConfig,\n  RouteProp,\n} from './types';\nimport useChildListeners from './useChildListeners';\nimport useComponent from './useComponent';\nimport useCurrentRender from './useCurrentRender';\nimport useDescriptors, { ScreenConfigWithParent } from './useDescriptors';\nimport useEventEmitter from './useEventEmitter';\nimport useFocusedListenersChildrenAdapter from './useFocusedListenersChildrenAdapter';\nimport useFocusEvents from './useFocusEvents';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useNavigationHelpers from './useNavigationHelpers';\nimport useOnAction from './useOnAction';\nimport useOnGetState from './useOnGetState';\nimport useOnRouteFocus from './useOnRouteFocus';\nimport useRegisterNavigator from './useRegisterNavigator';\nimport useScheduleUpdate from './useScheduleUpdate';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype NavigationBuilderOptions<ScreenOptions extends {}> = {\n  /**\n   * Default options specified by the navigator.\n   * It receives the custom options in the arguments if a function is specified.\n   */\n  defaultScreenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase>;\n        navigation: any;\n        options: ScreenOptions;\n      }) => ScreenOptions);\n};\n\ntype NavigatorRoute<State extends NavigationState> = {\n  key: string;\n  params?: NavigatorScreenParams<ParamListBase, State>;\n};\n\nconst isValidKey = (key: unknown) =>\n  key === undefined || (typeof key === 'string' && key !== '');\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = <\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>(\n  children: React.ReactNode,\n  groupKey?: string,\n  groupOptions?: ScreenConfigWithParent<\n    State,\n    ScreenOptions,\n    EventMap\n  >['options']\n) => {\n  const configs = React.Children.toArray(children).reduce<\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>[]\n  >((acc, child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the screen '${\n              child.props.name\n            }'. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        acc.push({\n          keys: [groupKey, child.props.navigationKey],\n          options: groupOptions,\n          props: child.props as RouteConfig<\n            ParamListBase,\n            string,\n            State,\n            ScreenOptions,\n            EventMap\n          >,\n        });\n        return acc;\n      }\n\n      if (child.type === React.Fragment || child.type === Group) {\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the group. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        // When we encounter a fragment or group, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(\n          ...getRouteConfigsFromChildren<State, ScreenOptions, EventMap>(\n            child.props.children,\n            child.props.navigationKey,\n            child.type !== Group\n              ? groupOptions\n              : groupOptions != null\n              ? [...groupOptions, child.props.screenOptions]\n              : [child.props.screenOptions]\n          )\n        );\n        return acc;\n      }\n    }\n\n    throw new Error(\n      `A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${\n        React.isValidElement(child)\n          ? `'${\n              typeof child.type === 'string' ? child.type : child.type?.name\n            }'${\n              child.props?.name ? ` for the screen '${child.props.name}'` : ''\n            }`\n          : typeof child === 'object'\n          ? JSON.stringify(child)\n          : `'${String(child)}'`\n      }). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`\n    );\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach((config) => {\n      const { name, children, component, getComponent } = config.props;\n\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\n          `Got an invalid name (${JSON.stringify(\n            name\n          )}) for the screen. It must be a non-empty string.`\n        );\n      }\n\n      if (\n        children != null ||\n        component !== undefined ||\n        getComponent !== undefined\n      ) {\n        if (children != null && component !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (component !== undefined && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && typeof children !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`\n          );\n        }\n\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(\n            `Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`\n          );\n        }\n\n        if (getComponent !== undefined && typeof getComponent !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`\n          );\n        }\n\n        if (typeof component === 'function') {\n          if (component.name === 'component') {\n            // Inline anonymous functions passed in the `component` prop will have the name of the prop\n            // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n            // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n            console.warn(\n              `Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`\n            );\n          } else if (/^[a-z]/.test(component.name)) {\n            console.warn(\n              `Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`\n            );\n          }\n        }\n      } else {\n        throw new Error(\n          `Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`\n        );\n      }\n    });\n  }\n\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport default function useNavigationBuilder<\n  State extends NavigationState,\n  RouterOptions extends DefaultRouterOptions,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>(\n  createRouter: RouterFactory<State, any, RouterOptions>,\n  options: DefaultNavigatorOptions<\n    ParamListBase,\n    State,\n    ScreenOptions,\n    EventMap\n  > &\n    NavigationBuilderOptions<ScreenOptions> &\n    RouterOptions\n) {\n  const navigatorKey = useRegisterNavigator();\n\n  const route = React.useContext(NavigationRouteContext) as\n    | NavigatorRoute<State>\n    | undefined;\n\n  const { children, screenListeners, ...rest } = options;\n  const { current: router } = React.useRef<Router<State, any>>(\n    createRouter({\n      ...(rest as unknown as RouterOptions),\n      ...(route?.params &&\n      route.params.state == null &&\n      route.params.initial !== false &&\n      typeof route.params.screen === 'string'\n        ? { initialRouteName: route.params.screen }\n        : null),\n    })\n  );\n\n  const routeConfigs = getRouteConfigsFromChildren<\n    State,\n    ScreenOptions,\n    EventMap\n  >(children);\n\n  const screens = routeConfigs.reduce<\n    Record<string, ScreenConfigWithParent<State, ScreenOptions, EventMap>>\n  >((acc, config) => {\n    if (config.props.name in acc) {\n      throw new Error(\n        `A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`\n      );\n    }\n\n    acc[config.props.name] = config;\n    return acc;\n  }, {});\n\n  const routeNames = routeConfigs.map((config) => config.props.name);\n  const routeKeyList = routeNames.reduce<Record<string, React.Key | undefined>>(\n    (acc, curr) => {\n      acc[curr] = screens[curr].keys.map((key) => key ?? '').join(':');\n      return acc;\n    },\n    {}\n  );\n  const routeParamList = routeNames.reduce<Record<string, object | undefined>>(\n    (acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    },\n    {}\n  );\n  const routeGetIdList = routeNames.reduce<\n    RouterConfigOptions['routeGetIdList']\n  >(\n    (acc, curr) =>\n      Object.assign(acc, {\n        [curr]: screens[curr].props.getId,\n      }),\n    {}\n  );\n\n  if (!routeNames.length) {\n    throw new Error(\n      \"Couldn't find any screens for the navigator. Have you defined any screens as its children?\"\n    );\n  }\n\n  const isStateValid = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState>) =>\n      state.type === undefined || state.type === router.type,\n    [router.type]\n  );\n\n  const isStateInitialized = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) =>\n      state !== undefined && state.stale === false && isStateValid(state),\n    [isStateValid]\n  );\n\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    setKey,\n    getKey,\n    getIsInitial,\n  } = React.useContext(NavigationStateContext);\n\n  const stateCleanedUp = React.useRef(false);\n\n  const cleanUpState = React.useCallback(() => {\n    setCurrentState(undefined);\n    stateCleanedUp.current = true;\n  }, [setCurrentState]);\n\n  const setState = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    },\n    [setCurrentState]\n  );\n\n  const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n    const initialRouteParamList = routeNames.reduce<\n      Record<string, object | undefined>\n    >((acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      const initialParamsFromParams =\n        route?.params?.state == null &&\n        route?.params?.initial !== false &&\n        route?.params?.screen === curr\n          ? route.params.params\n          : undefined;\n\n      acc[curr] =\n        initialParams !== undefined || initialParamsFromParams !== undefined\n          ? {\n              ...initialParams,\n              ...initialParamsFromParams,\n            }\n          : undefined;\n\n      return acc;\n    }, {});\n\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    if (\n      (currentState === undefined || !isStateValid(currentState)) &&\n      route?.params?.state == null\n    ) {\n      return [\n        router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList,\n        }),\n        true,\n      ];\n    } else {\n      return [\n        router.getRehydratedState(\n          route?.params?.state ?? (currentState as PartialState<State>),\n          {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList,\n          }\n        ),\n        false,\n      ];\n    }\n    // We explicitly don't include routeNames, route.params etc. in the dep list\n    // below. We want to avoid forcing a new state to be calculated in those cases\n    // Instead, we handle changes to these in the nextState code below. Note\n    // that some changes to routeConfigs are explicitly ignored, such as changes\n    // to initialParams\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentState, router, isStateValid]);\n\n  const previousRouteKeyListRef = React.useRef(routeKeyList);\n\n  React.useEffect(() => {\n    previousRouteKeyListRef.current = routeKeyList;\n  });\n\n  const previousRouteKeyList = previousRouteKeyListRef.current;\n\n  let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initalized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedState as State);\n\n  let nextState: State = state;\n\n  if (\n    !isArrayEqual(state.routeNames, routeNames) ||\n    !isRecordEqual(routeKeyList, previousRouteKeyList)\n  ) {\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = router.getStateForRouteNamesChange(state, {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n      routeKeyChanges: Object.keys(routeKeyList).filter(\n        (name) =>\n          previousRouteKeyList.hasOwnProperty(name) &&\n          routeKeyList[name] !== previousRouteKeyList[name]\n      ),\n    });\n  }\n\n  const previousNestedParamsRef = React.useRef(route?.params);\n\n  React.useEffect(() => {\n    previousNestedParamsRef.current = route?.params;\n  }, [route?.params]);\n\n  if (route?.params) {\n    const previousParams = previousNestedParamsRef.current;\n\n    let action: CommonActions.Action | undefined;\n\n    if (\n      typeof route.params.state === 'object' &&\n      route.params.state != null &&\n      route.params !== previousParams\n    ) {\n      // If the route was updated with new state, we should reset to it\n      action = CommonActions.reset(route.params.state);\n    } else if (\n      typeof route.params.screen === 'string' &&\n      ((route.params.initial === false && isFirstStateInitialization) ||\n        route.params !== previousParams)\n    ) {\n      // If the route was updated with new screen name and/or params, we should navigate there\n      action = CommonActions.navigate({\n        name: route.params.screen,\n        params: route.params.params,\n        path: route.params.path,\n      });\n    }\n\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = action\n      ? router.getStateForAction(nextState, action, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        })\n      : null;\n\n    nextState =\n      updatedState !== null\n        ? router.getRehydratedState(updatedState, {\n            routeNames,\n            routeParamList,\n            routeGetIdList,\n          })\n        : nextState;\n  }\n\n  const shouldUpdate = state !== nextState;\n\n  useScheduleUpdate(() => {\n    if (shouldUpdate) {\n      // If the state needs to be updated, we'll schedule an update\n      setState(nextState);\n    }\n  });\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state object we return to use the latest state as soon as possible\n  state = nextState;\n\n  React.useEffect(() => {\n    setKey(navigatorKey);\n\n    if (!getIsInitial()) {\n      // If it's not initial render, we need to update the state\n      // This will make sure that our container gets notifier of state changes due to new mounts\n      // This is necessary for proper screen tracking, URL updates etc.\n      setState(nextState);\n    }\n\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      // We do it in a timeout because we need to detect if another navigator mounted in the meantime\n      // For example, if another navigator has started rendering, we should skip cleanup\n      // Otherwise, our cleanup step will cleanup state for the other navigator and re-initialize it\n      setTimeout(() => {\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          cleanUpState();\n        }\n      }, 0);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // We initialize this ref here to avoid a new getState getting initialized\n  // whenever initializedState changes. We want getState to have access to the\n  // latest initializedState, but don't need it to change when that happens\n  const initializedStateRef = React.useRef<State>();\n  initializedStateRef.current = initializedState;\n\n  const getState = React.useCallback((): State => {\n    const currentState = getCurrentState();\n\n    return isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedStateRef.current as State);\n  }, [getCurrentState, isStateInitialized]);\n\n  const emitter = useEventEmitter<EventMapCore<State>>((e) => {\n    let routeNames = [];\n\n    let route: Route<string> | undefined;\n\n    if (e.target) {\n      route = state.routes.find((route) => route.key === e.target);\n\n      if (route?.name) {\n        routeNames.push(route.name);\n      }\n    } else {\n      route = state.routes[state.index];\n      routeNames.push(\n        ...Object.keys(screens).filter((name) => route?.name === name)\n      );\n    }\n\n    if (route == null) {\n      return;\n    }\n\n    const navigation = descriptors[route.key].navigation;\n\n    const listeners = ([] as (((e: any) => void) | undefined)[])\n      .concat(\n        // Get an array of listeners for all screens + common listeners on navigator\n        ...[\n          screenListeners,\n          ...routeNames.map((name) => {\n            const { listeners } = screens[name].props;\n            return listeners;\n          }),\n        ].map((listeners) => {\n          const map =\n            typeof listeners === 'function'\n              ? listeners({ route: route as any, navigation })\n              : listeners;\n\n          return map\n            ? Object.keys(map)\n                .filter((type) => type === e.type)\n                .map((type) => map?.[type])\n            : undefined;\n        })\n      )\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n\n    listeners.forEach((listener) => listener?.(e));\n  });\n\n  useFocusEvents({ state, emitter });\n\n  React.useEffect(() => {\n    emitter.emit({ type: 'state', data: { state } });\n  }, [emitter, state]);\n\n  const { listeners: childListeners, addListener } = useChildListeners();\n\n  const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key: route?.key,\n    actionListeners: childListeners.action,\n    beforeRemoveListeners: keyedListeners.beforeRemove,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n    },\n    emitter,\n  });\n\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key: route?.key,\n    getState,\n    setState,\n  });\n\n  const navigation = useNavigationHelpers<\n    State,\n    ActionHelpers,\n    NavigationAction,\n    EventMap\n  >({\n    id: options.id,\n    onAction,\n    getState,\n    emitter,\n    router,\n  });\n\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners: childListeners.focus,\n  });\n\n  useOnGetState({\n    getState,\n    getStateListeners: keyedListeners.getState,\n  });\n\n  const descriptors = useDescriptors<\n    State,\n    ActionHelpers,\n    ScreenOptions,\n    EventMap\n  >({\n    state,\n    screens,\n    navigation,\n    screenOptions: options.screenOptions,\n    defaultScreenOptions: options.defaultScreenOptions,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addListener,\n    addKeyedListener,\n    router,\n    // @ts-expect-error: this should have both core and custom events, but too much work right now\n    emitter,\n  });\n\n  useCurrentRender({\n    state,\n    navigation,\n    descriptors,\n  });\n\n  const NavigationContent = useComponent((children: React.ReactNode) => (\n    <NavigationHelpersContext.Provider value={navigation}>\n      <PreventRemoveProvider>{children}</PreventRemoveProvider>\n    </NavigationHelpersContext.Provider>\n  ));\n\n  return {\n    state,\n    navigation,\n    descriptors,\n    NavigationContent,\n  };\n}\n"],"mappings":"olCAAA,OACEA,aAAa,KAUR,2BAA2B,CAClC,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAC9B,OAASC,kBAAkB,KAAQ,UAAU,CAE7C,MAAO,CAAAC,KAAK,eACZ,MAAO,CAAAC,YAAY,sBACnB,MAAO,CAAAC,aAAa,uBACpB,MAAO,CAAAC,wBAAwB,kCAC/B,MAAO,CAAAC,sBAAsB,gCAC7B,MAAO,CAAAC,sBAAsB,gCAC7B,MAAO,CAAAC,qBAAqB,+BAC5B,MAAO,CAAAC,MAAM,gBACb,OAKEC,iBAAiB,eAInB,MAAO,CAAAC,iBAAiB,2BACxB,MAAO,CAAAC,YAAY,sBACnB,MAAO,CAAAC,gBAAgB,0BACvB,MAAO,CAAAC,cAAc,wBACrB,MAAO,CAAAC,eAAe,yBACtB,MAAO,CAAAC,kCAAkC,4CACzC,MAAO,CAAAC,cAAc,wBACrB,MAAO,CAAAC,sBAAsB,gCAC7B,MAAO,CAAAC,oBAAoB,8BAC3B,MAAO,CAAAC,WAAW,qBAClB,MAAO,CAAAC,aAAa,uBACpB,MAAO,CAAAC,eAAe,yBACtB,MAAO,CAAAC,oBAAoB,8BAC3B,MAAO,CAAAC,iBAAiB,2BAIxBd,iBAAiB,CAqBjB,GAAM,CAAAe,UAAU,CAAI,QAAd,CAAAA,UAAUA,CAAIC,GAAY,QAC9B,CAAAA,GAAG,GAAKC,SAAS,EAAK,MAAO,CAAAD,GAAG,GAAK,QAAQ,EAAIA,GAAG,GAAK,EAAG,GAO9D,GAAM,CAAAE,2BAA2B,CAAG,QAA9B,CAAAA,2BAA2BA,CAK/BC,QAAyB,CACzBC,QAAiB,CACjBC,YAIY,CACT,CACH,GAAM,CAAAC,OAAO,CAAGhC,KAAK,CAACiC,QAAQ,CAACC,OAAO,CAACL,QAAQ,CAAC,CAACM,MAAM,CAErD,SAACC,GAAG,CAAEC,KAAK,CAAK,KAAAC,WAAA,CAAAC,YAAA,CAChB,GAAIvC,KAAK,CAACwC,cAAc,CAACH,KAAK,CAAC,CAAE,CAC/B,GAAIA,KAAK,CAACI,IAAI,GAAKhC,MAAM,CAAE,CAIzB,GAAI,CAACgB,UAAU,CAACY,KAAK,CAACK,KAAK,CAACC,aAAa,CAAC,CAAE,CAC1C,KAAM,IAAI,CAAAC,KAAK,yCAC2BC,IAAI,CAACC,SAAS,CACpDT,KAAK,CAACK,KAAK,CAACC,aAAa,CACzB,sBACAN,KAAK,CAACK,KAAK,CAACK,IACb,oDACF,CACH,CAEAX,GAAG,CAACY,IAAI,CAAC,CACPC,IAAI,CAAE,CAACnB,QAAQ,CAAEO,KAAK,CAACK,KAAK,CAACC,aAAa,CAAC,CAC3CO,OAAO,CAAEnB,YAAY,CACrBW,KAAK,CAAEL,KAAK,CAACK,KAOf,CAAC,CAAC,CACF,MAAO,CAAAN,GAAG,CACZ,CAEA,GAAIC,KAAK,CAACI,IAAI,GAAKzC,KAAK,CAACmD,QAAQ,EAAId,KAAK,CAACI,IAAI,GAAKvC,KAAK,CAAE,CACzD,GAAI,CAACuB,UAAU,CAACY,KAAK,CAACK,KAAK,CAACC,aAAa,CAAC,CAAE,CAC1C,KAAM,IAAI,CAAAC,KAAK,yCAC2BC,IAAI,CAACC,SAAS,CACpDT,KAAK,CAACK,KAAK,CAACC,aAAa,CACzB,kEACH,CACH,CAIAP,GAAG,CAACY,IAAI,CAAAI,KAAA,CAARhB,GAAG,CAAAiB,kBAAA,CACEzB,2BAA2B,CAC5BS,KAAK,CAACK,KAAK,CAACb,QAAQ,CACpBQ,KAAK,CAACK,KAAK,CAACC,aAAa,CACzBN,KAAK,CAACI,IAAI,GAAKvC,KAAK,CAChB6B,YAAY,CACZA,YAAY,EAAI,IAAI,IAAAuB,MAAA,CAAAD,kBAAA,CAChBtB,YAAY,GAAEM,KAAK,CAACK,KAAK,CAACa,aAAa,GAC3C,CAAClB,KAAK,CAACK,KAAK,CAACa,aAAa,CAAC,CAChC,EACF,CACD,MAAO,CAAAnB,GAAG,CACZ,CACF,CAEA,KAAM,IAAI,CAAAQ,KAAK,sGAEX5C,KAAK,CAACwC,cAAc,CAACH,KAAK,CAAC,MAErB,MAAO,CAAAA,KAAK,CAACI,IAAI,GAAK,QAAQ,CAAGJ,KAAK,CAACI,IAAI,EAAAH,WAAA,CAAGD,KAAK,CAACI,IAAI,UAAAH,WAAA,iBAAVA,WAAA,CAAYS,IAC3D,OACC,CAAAR,YAAA,CAAAF,KAAK,CAACK,KAAK,UAAAH,YAAA,WAAXA,YAAA,CAAaQ,IAAI,qBAAuBV,KAAK,CAACK,KAAK,CAACK,IAAK,KAAK,EAC/D,EACD,MAAO,CAAAV,KAAK,GAAK,QAAQ,CACzBQ,IAAI,CAACC,SAAS,CAACT,KAAK,CAAC,KACjBmB,MAAM,CAACnB,KAAK,CAAE,IACvB,+FACF,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIoB,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC3B,OAAO,CAAC4B,OAAO,CAAE,SAAAC,MAAM,CAAK,CAC1B,IAAAC,aAAA,CAAoDD,MAAM,CAACnB,KAAK,CAAxDK,IAAI,CAAAe,aAAA,CAAJf,IAAI,CAAElB,QAAQ,CAAAiC,aAAA,CAARjC,QAAQ,CAAEkC,SAAS,CAAAD,aAAA,CAATC,SAAS,CAAEC,YAAA,CAAAF,aAAA,CAAAE,YAAA,CAEnC,GAAI,MAAO,CAAAjB,IAAI,GAAK,QAAQ,EAAI,CAACA,IAAI,CAAE,CACrC,KAAM,IAAI,CAAAH,KAAK,yBACWC,IAAI,CAACC,SAAS,CACpCC,IAAI,CACJ,oDACH,CACH,CAEA,GACElB,QAAQ,EAAI,IAAI,EAChBkC,SAAS,GAAKpC,SAAS,EACvBqC,YAAY,GAAKrC,SAAS,CAC1B,CACA,GAAIE,QAAQ,EAAI,IAAI,EAAIkC,SAAS,GAAKpC,SAAS,CAAE,CAC/C,KAAM,IAAI,CAAAiB,KAAK,8DACgDG,IAAK,sCACnE,CACH,CAEA,GAAIlB,QAAQ,EAAI,IAAI,EAAImC,YAAY,GAAKrC,SAAS,CAAE,CAClD,KAAM,IAAI,CAAAiB,KAAK,iEACmDG,IAAK,sCACtE,CACH,CAEA,GAAIgB,SAAS,GAAKpC,SAAS,EAAIqC,YAAY,GAAKrC,SAAS,CAAE,CACzD,KAAM,IAAI,CAAAiB,KAAK,kEACoDG,IAAK,sCACvE,CACH,CAEA,GAAIlB,QAAQ,EAAI,IAAI,EAAI,MAAO,CAAAA,QAAQ,GAAK,UAAU,CAAE,CACtD,KAAM,IAAI,CAAAe,KAAK,6DAC+CG,IAAK,uDAClE,CACH,CAEA,GAAIgB,SAAS,GAAKpC,SAAS,EAAI,CAAC1B,kBAAkB,CAAC8D,SAAS,CAAC,CAAE,CAC7D,KAAM,IAAI,CAAAnB,KAAK,8DACgDG,IAAK,0CACnE,CACH,CAEA,GAAIiB,YAAY,GAAKrC,SAAS,EAAI,MAAO,CAAAqC,YAAY,GAAK,UAAU,CAAE,CACpE,KAAM,IAAI,CAAApB,KAAK,iEACmDG,IAAK,yDACtE,CACH,CAEA,GAAI,MAAO,CAAAgB,SAAS,GAAK,UAAU,CAAE,CACnC,GAAIA,SAAS,CAAChB,IAAI,GAAK,WAAW,CAAE,CAIlCkB,OAAO,CAACC,IAAI,sFAC2EnB,IAAK,yRAC3F,CACH,CAAC,IAAM,IAAI,QAAQ,CAACoB,IAAI,CAACJ,SAAS,CAAChB,IAAI,CAAC,CAAE,CACxCkB,OAAO,CAACC,IAAI,mCACwBH,SAAS,CAAChB,IAAK,sBAAoBA,IAAK,2MAC3E,CACH,CACF,CACF,CAAC,IAAM,CACL,KAAM,IAAI,CAAAH,KAAK,mFACqEG,IAAK,uLACxF,CACH,CACF,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAf,OAAO,CAChB,CAAC,CASD,cAAe,SAAS,CAAAoC,oBAAoBA,CAO1CC,YAAsD,CACtDnB,OAOe,CACf,CACA,GAAM,CAAAoB,YAAY,CAAG/C,oBAAoB,EAAE,CAE3C,GAAM,CAAAgD,KAAK,CAAGvE,KAAK,CAACwE,UAAU,CAAClE,sBAAsB,CAExC,CAEb,GAAQ,CAAAuB,QAAQ,CAA+BqB,OAAO,CAA9CrB,QAAQ,CAAE4C,eAAe,CAAcvB,OAAO,CAApCuB,eAAe,CAAKC,IAAA,CAAAC,wBAAA,CAASzB,OAAO,CAAA0B,SAAA,EACtD,IAAAC,aAAA,CAA4B7E,KAAK,CAAC8E,MAAM,CACtCT,YAAY,CAAAU,aAAA,CAAAA,aAAA,IACNL,IAAiC,EACjCH,KAAK,SAALA,KAAK,WAALA,KAAK,CAAES,MAAM,EACjBT,KAAK,CAACS,MAAM,CAACC,KAAK,EAAI,IAAI,EAC1BV,KAAK,CAACS,MAAM,CAACE,OAAO,GAAK,KAAK,EAC9B,MAAO,CAAAX,KAAK,CAACS,MAAM,CAACG,MAAM,GAAK,QAAQ,CACnC,CAAEC,gBAAgB,CAAEb,KAAK,CAACS,MAAM,CAACG,MAAO,CAAC,CACzC,IAAI,EACR,CACH,CAVgBE,MAAA,CAAAR,aAAA,CAATS,OAAO,CAYf,GAAM,CAAAC,YAAY,CAAG3D,2BAA2B,CAI9CC,QAAQ,CAAC,CAEX,GAAM,CAAA2D,OAAO,CAAGD,YAAY,CAACpD,MAAM,CAEjC,SAACC,GAAG,CAAEyB,MAAM,CAAK,CACjB,GAAIA,MAAM,CAACnB,KAAK,CAACK,IAAI,GAAI,CAAAX,GAAG,CAAE,CAC5B,KAAM,IAAI,CAAAQ,KAAK,8GACgGiB,MAAM,CAACnB,KAAK,CAACK,IAAK,MAChI,CACH,CAEAX,GAAG,CAACyB,MAAM,CAACnB,KAAK,CAACK,IAAI,CAAC,CAAGc,MAAM,CAC/B,MAAO,CAAAzB,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN,GAAM,CAAAqD,UAAU,CAAGF,YAAY,CAACG,GAAG,CAAE,SAAA7B,MAAM,QAAK,CAAAA,MAAM,CAACnB,KAAK,CAACK,IAAI,GAAC,CAClE,GAAM,CAAA4C,YAAY,CAAGF,UAAU,CAACtD,MAAM,CACpC,SAACC,GAAG,CAAEwD,IAAI,CAAK,CACbxD,GAAG,CAACwD,IAAI,CAAC,CAAGJ,OAAO,CAACI,IAAI,CAAC,CAAC3C,IAAI,CAACyC,GAAG,CAAE,SAAAhE,GAAG,QAAK,CAAAA,GAAG,OAAHA,GAAG,CAAI,EAAE,GAAC,CAACmE,IAAI,CAAC,GAAG,CAAC,CAChE,MAAO,CAAAzD,GAAG,CACZ,CAAC,CACD,CAAC,CAAC,CACH,CACD,GAAM,CAAA0D,cAAc,CAAGL,UAAU,CAACtD,MAAM,CACtC,SAACC,GAAG,CAAEwD,IAAI,CAAK,CACb,GAAQ,CAAAG,aAAA,CAAkBP,OAAO,CAACI,IAAI,CAAC,CAAClD,KAAK,CAArCqD,aAAA,CACR3D,GAAG,CAACwD,IAAI,CAAC,CAAGG,aAAa,CACzB,MAAO,CAAA3D,GAAG,CACZ,CAAC,CACD,CAAC,CAAC,CACH,CACD,GAAM,CAAA4D,cAAc,CAAGP,UAAU,CAACtD,MAAM,CAGtC,SAACC,GAAG,CAAEwD,IAAI,QACR,CAAAK,MAAM,CAACC,MAAM,CAAC9D,GAAG,CAAA+D,eAAA,IACdP,IAAI,CAAGJ,OAAO,CAACI,IAAI,CAAC,CAAClD,KAAK,CAAC0D,KAAA,EAC5B,GACJ,CAAC,CAAC,CACH,CAED,GAAI,CAACX,UAAU,CAACY,MAAM,CAAE,CACtB,KAAM,IAAI,CAAAzD,KAAK,CACb,4FAA4F,CAC7F,CACH,CAEA,GAAM,CAAA0D,YAAY,CAAGtG,KAAK,CAACuG,WAAW,CACnC,SAAAtB,KAAsD,QACrD,CAAAA,KAAK,CAACxC,IAAI,GAAKd,SAAS,EAAIsD,KAAK,CAACxC,IAAI,GAAK4C,MAAM,CAAC5C,IAAI,GACxD,CAAC4C,MAAM,CAAC5C,IAAI,CAAC,CACd,CAED,GAAM,CAAA+D,kBAAkB,CAAGxG,KAAK,CAACuG,WAAW,CACzC,SAAAtB,KAAkE,QACjE,CAAAA,KAAK,GAAKtD,SAAS,EAAIsD,KAAK,CAACwB,KAAK,GAAK,KAAK,EAAIH,YAAY,CAACrB,KAAK,CAAC,GACrE,CAACqB,YAAY,CAAC,CACf,CAED,IAAAI,iBAAA,CAOI1G,KAAK,CAACwE,UAAU,CAACjE,sBAAsB,CAAC,CANnCoG,YAAY,CAAAD,iBAAA,CAAnBzB,KAAK,CACK2B,eAAe,CAAAF,iBAAA,CAAzBG,QAAQ,CACEC,eAAe,CAAAJ,iBAAA,CAAzBK,QAAQ,CACRC,MAAM,CAAAN,iBAAA,CAANM,MAAM,CACNC,MAAM,CAAAP,iBAAA,CAANO,MAAM,CACNC,YAAA,CAAAR,iBAAA,CAAAQ,YAAA,CAGF,GAAM,CAAAC,cAAc,CAAGnH,KAAK,CAAC8E,MAAM,CAAC,KAAK,CAAC,CAE1C,GAAM,CAAAsC,YAAY,CAAGpH,KAAK,CAACuG,WAAW,CAAC,UAAM,CAC3CO,eAAe,CAACnF,SAAS,CAAC,CAC1BwF,cAAc,CAAC7B,OAAO,CAAG,IAAI,CAC/B,CAAC,CAAE,CAACwB,eAAe,CAAC,CAAC,CAErB,GAAM,CAAAC,QAAQ,CAAG/G,KAAK,CAACuG,WAAW,CAC/B,SAAAtB,KAAkE,CAAK,CACtE,GAAIkC,cAAc,CAAC7B,OAAO,CAAE,CAI1B,OACF,CACAwB,eAAe,CAAC7B,KAAK,CAAC,CACxB,CAAC,CACD,CAAC6B,eAAe,CAAC,CAClB,CAED,IAAAO,cAAA,CAAuDrH,KAAK,CAACsH,OAAO,CAAC,UAAM,KAAAC,cAAA,CACzE,GAAM,CAAAC,qBAAqB,CAAG/B,UAAU,CAACtD,MAAM,CAE7C,SAACC,GAAG,CAAEwD,IAAI,CAAK,KAAA6B,aAAA,CAAAC,cAAA,CAAAC,cAAA,CACf,GAAQ,CAAA5B,aAAA,CAAkBP,OAAO,CAACI,IAAI,CAAC,CAAClD,KAAK,CAArCqD,aAAA,CACR,GAAM,CAAA6B,uBAAuB,CAC3B,CAAArD,KAAK,SAALA,KAAK,kBAAAkD,aAAA,CAALlD,KAAK,CAAES,MAAM,UAAAyC,aAAA,iBAAbA,aAAA,CAAexC,KAAK,GAAI,IAAI,EAC5B,CAAAV,KAAK,SAALA,KAAK,kBAAAmD,cAAA,CAALnD,KAAK,CAAES,MAAM,UAAA0C,cAAA,iBAAbA,cAAA,CAAexC,OAAO,IAAK,KAAK,EAChC,CAAAX,KAAK,SAALA,KAAK,kBAAAoD,cAAA,CAALpD,KAAK,CAAES,MAAM,UAAA2C,cAAA,iBAAbA,cAAA,CAAexC,MAAM,IAAKS,IAAI,CAC1BrB,KAAK,CAACS,MAAM,CAACA,MAAM,CACnBrD,SAAS,CAEfS,GAAG,CAACwD,IAAI,CAAC,CACPG,aAAa,GAAKpE,SAAS,EAAIiG,uBAAuB,GAAKjG,SAAS,CAAAoD,aAAA,CAAAA,aAAA,IAE3DgB,aAAa,EACb6B,uBAAA,EAELjG,SAAS,CAEf,MAAO,CAAAS,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAMN,GACE,CAACuE,YAAY,GAAKhF,SAAS,EAAI,CAAC2E,YAAY,CAACK,YAAY,CAAC,GAC1D,CAAApC,KAAK,SAALA,KAAK,kBAAAgD,cAAA,CAALhD,KAAK,CAAES,MAAM,UAAAuC,cAAA,iBAAbA,cAAA,CAAetC,KAAK,GAAI,IAAI,CAC5B,CACA,MAAO,CACLI,MAAM,CAACwC,eAAe,CAAC,CACrBpC,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAE0B,qBAAqB,CACrCxB,cAAA,CAAAA,cACF,CAAC,CAAC,CACF,IAAI,CACL,CACH,CAAC,IAAM,KAAA8B,IAAA,KAAAC,cAAA,CACL,MAAO,CACL1C,MAAM,CAAC2C,kBAAkB,EAAAF,IAAA,CACvBvD,KAAK,SAALA,KAAK,kBAAAwD,cAAA,CAALxD,KAAK,CAAES,MAAM,UAAA+C,cAAA,iBAAbA,cAAA,CAAe9C,KAAK,QAAA6C,IAAA,CAAKnB,YAAoC,CAC7D,CACElB,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAE0B,qBAAqB,CACrCxB,cAAA,CAAAA,cACF,CAAC,CACF,CACD,KAAK,CACN,CACH,CAOF,CAAC,CAAE,CAACW,YAAY,CAAEtB,MAAM,CAAEiB,YAAY,CAAC,CAAC,CAAA2B,eAAA,CAAAC,cAAA,CAAAb,cAAA,IA1DjCc,gBAAgB,CAAAF,eAAA,IAAEG,0BAA0B,CAAAH,eAAA,IA4DnD,GAAM,CAAAI,uBAAuB,CAAGrI,KAAK,CAAC8E,MAAM,CAACa,YAAY,CAAC,CAE1D3F,KAAK,CAACsI,SAAS,CAAC,UAAM,CACpBD,uBAAuB,CAAC/C,OAAO,CAAGK,YAAY,CAChD,CAAC,CAAC,CAEF,GAAM,CAAA4C,oBAAoB,CAAGF,uBAAuB,CAAC/C,OAAO,CAE5D,GAAI,CAAAL,KAAK,CAIPuB,kBAAkB,CAACG,YAAY,CAAC,CAC3BA,YAAY,CACZwB,gBAA0B,CAEjC,GAAI,CAAAK,SAAgB,CAAGvD,KAAK,CAE5B,GACE,CAAC9E,YAAY,CAAC8E,KAAK,CAACQ,UAAU,CAAEA,UAAU,CAAC,EAC3C,CAACrF,aAAa,CAACuF,YAAY,CAAE4C,oBAAoB,CAAC,CAClD,CAEAC,SAAS,CAAGnD,MAAM,CAACoD,2BAA2B,CAACxD,KAAK,CAAE,CACpDQ,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAdA,cAAc,CACdE,cAAc,CAAdA,cAAc,CACd0C,eAAe,CAAEzC,MAAM,CAAChD,IAAI,CAAC0C,YAAY,CAAC,CAACgD,MAAM,CAC9C,SAAA5F,IAAI,QACH,CAAAwF,oBAAoB,CAACK,cAAc,CAAC7F,IAAI,CAAC,EACzC4C,YAAY,CAAC5C,IAAI,CAAC,GAAKwF,oBAAoB,CAACxF,IAAI,CAAC,GAEvD,CAAC,CAAC,CACJ,CAEA,GAAM,CAAA8F,uBAAuB,CAAG7I,KAAK,CAAC8E,MAAM,CAACP,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAES,MAAM,CAAC,CAE3DhF,KAAK,CAACsI,SAAS,CAAC,UAAM,CACpBO,uBAAuB,CAACvD,OAAO,CAAGf,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAES,MAAM,CACjD,CAAC,CAAE,CAACT,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAES,MAAM,CAAC,CAAC,CAEnB,GAAIT,KAAK,SAALA,KAAK,WAALA,KAAK,CAAES,MAAM,CAAE,CACjB,GAAM,CAAA8D,cAAc,CAAGD,uBAAuB,CAACvD,OAAO,CAEtD,GAAI,CAAAyD,MAAwC,CAE5C,GACE,MAAO,CAAAxE,KAAK,CAACS,MAAM,CAACC,KAAK,GAAK,QAAQ,EACtCV,KAAK,CAACS,MAAM,CAACC,KAAK,EAAI,IAAI,EAC1BV,KAAK,CAACS,MAAM,GAAK8D,cAAc,CAC/B,CAEAC,MAAM,CAAGhJ,aAAa,CAACiJ,KAAK,CAACzE,KAAK,CAACS,MAAM,CAACC,KAAK,CAAC,CAClD,CAAC,IAAM,IACL,MAAO,CAAAV,KAAK,CAACS,MAAM,CAACG,MAAM,GAAK,QAAQ,GACrCZ,KAAK,CAACS,MAAM,CAACE,OAAO,GAAK,KAAK,EAAIkD,0BAA0B,EAC5D7D,KAAK,CAACS,MAAM,GAAK8D,cAAc,CAAC,CAClC,CAEAC,MAAM,CAAGhJ,aAAa,CAACkJ,QAAQ,CAAC,CAC9BlG,IAAI,CAAEwB,KAAK,CAACS,MAAM,CAACG,MAAM,CACzBH,MAAM,CAAET,KAAK,CAACS,MAAM,CAACA,MAAM,CAC3BkE,IAAI,CAAE3E,KAAK,CAACS,MAAM,CAACkE,IACrB,CAAC,CAAC,CACJ,CAGA,GAAM,CAAAC,YAAY,CAAGJ,MAAM,CACvB1D,MAAM,CAAC+D,iBAAiB,CAACZ,SAAS,CAAEO,MAAM,CAAE,CAC1CtD,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAdA,cAAc,CACdE,cAAA,CAAAA,cACF,CAAC,CAAC,CACF,IAAI,CAERwC,SAAS,CACPW,YAAY,GAAK,IAAI,CACjB9D,MAAM,CAAC2C,kBAAkB,CAACmB,YAAY,CAAE,CACtC1D,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAdA,cAAc,CACdE,cAAA,CAAAA,cACF,CAAC,CAAC,CACFwC,SAAS,CACjB,CAEA,GAAM,CAAAa,YAAY,CAAGpE,KAAK,GAAKuD,SAAS,CAExChH,iBAAiB,CAAC,UAAM,CACtB,GAAI6H,YAAY,CAAE,CAEhBtC,QAAQ,CAACyB,SAAS,CAAC,CACrB,CACF,CAAC,CAAC,CAKFvD,KAAK,CAAGuD,SAAS,CAEjBxI,KAAK,CAACsI,SAAS,CAAC,UAAM,CACpBtB,MAAM,CAAC1C,YAAY,CAAC,CAEpB,GAAI,CAAC4C,YAAY,EAAE,CAAE,CAInBH,QAAQ,CAACyB,SAAS,CAAC,CACrB,CAEA,MAAO,WAAM,CAKXc,UAAU,CAAC,UAAM,CACf,GAAI1C,eAAe,EAAE,GAAKjF,SAAS,EAAIsF,MAAM,EAAE,GAAK3C,YAAY,CAAE,CAChE8C,YAAY,EAAE,CAChB,CACF,CAAC,CAAE,CAAC,CAAC,CACP,CAAC,CAEH,CAAC,CAAE,EAAE,CAAC,CAKN,GAAM,CAAAmC,mBAAmB,CAAGvJ,KAAK,CAAC8E,MAAM,EAAS,CACjDyE,mBAAmB,CAACjE,OAAO,CAAG6C,gBAAgB,CAE9C,GAAM,CAAAtB,QAAQ,CAAG7G,KAAK,CAACuG,WAAW,CAAC,UAAa,CAC9C,GAAM,CAAAI,YAAY,CAAGC,eAAe,EAAE,CAEtC,MAAO,CAAAJ,kBAAkB,CAACG,YAAY,CAAC,CAClCA,YAAY,CACZ4C,mBAAmB,CAACjE,OAAiB,CAC5C,CAAC,CAAE,CAACsB,eAAe,CAAEJ,kBAAkB,CAAC,CAAC,CAEzC,GAAM,CAAAgD,OAAO,CAAGzI,eAAe,CAAuB,SAAA0I,CAAC,CAAK,KAAAC,KAAA,CAC1D,GAAI,CAAAjE,UAAU,CAAG,EAAE,CAEnB,GAAI,CAAAlB,KAAgC,CAEpC,GAAIkF,CAAC,CAACE,MAAM,CAAE,KAAAC,MAAA,CACZrF,KAAK,CAAGU,KAAK,CAAC4E,MAAM,CAACC,IAAI,CAAE,SAAAvF,KAAK,QAAK,CAAAA,KAAK,CAAC7C,GAAG,GAAK+H,CAAC,CAACE,MAAM,GAAC,CAE5D,IAAAC,MAAA,CAAIrF,KAAK,UAAAqF,MAAA,WAALA,MAAA,CAAO7G,IAAI,CAAE,CACf0C,UAAU,CAACzC,IAAI,CAACuB,KAAK,CAACxB,IAAI,CAAC,CAC7B,CACF,CAAC,IAAM,CACLwB,KAAK,CAAGU,KAAK,CAAC4E,MAAM,CAAC5E,KAAK,CAAC8E,KAAK,CAAC,CACjCtE,UAAU,CAACzC,IAAI,CAAAI,KAAA,CAAfqC,UAAU,CAAApC,kBAAA,CACL4C,MAAM,CAAChD,IAAI,CAACuC,OAAO,CAAC,CAACmD,MAAM,CAAE,SAAA5F,IAAI,MAAAiH,OAAA,OAAK,EAAAA,OAAA,CAAAzF,KAAK,UAAAyF,OAAA,iBAALA,OAAA,CAAOjH,IAAI,IAAKA,IAAI,GAAC,EAC/D,CACH,CAEA,GAAIwB,KAAK,EAAI,IAAI,CAAE,CACjB,OACF,CAEA,GAAM,CAAA0F,UAAU,CAAGC,WAAW,CAAC3F,KAAK,CAAC7C,GAAG,CAAC,CAACuI,UAAU,CAEpD,GAAM,CAAAE,SAAS,CAAI,CAAAT,KAAA,GAAE,EAClBpG,MAAM,CAAAF,KAAA,CAAAsG,KAAA,CAAArG,kBAAA,CAEF,CACDoB,eAAe,EAAAnB,MAAA,CAAAD,kBAAA,CACZoC,UAAU,CAACC,GAAG,CAAE,SAAA3C,IAAI,CAAK,CAC1B,GAAQ,CAAAoH,SAAA,CAAc3E,OAAO,CAACzC,IAAI,CAAC,CAACL,KAAK,CAAjCyH,SAAA,CACR,MAAO,CAAAA,SAAS,CAClB,CAAC,CAAC,GACFzE,GAAG,CAAE,SAAAyE,SAAS,CAAK,CACnB,GAAM,CAAAzE,GAAG,CACP,MAAO,CAAAyE,SAAS,GAAK,UAAU,CAC3BA,SAAS,CAAC,CAAE5F,KAAK,CAAEA,KAAY,CAAE0F,UAAA,CAAAA,UAAW,CAAC,CAAC,CAC9CE,SAAS,CAEf,MAAO,CAAAzE,GAAG,CACNO,MAAM,CAAChD,IAAI,CAACyC,GAAG,CAAC,CACbiD,MAAM,CAAE,SAAAlG,IAAI,QAAK,CAAAA,IAAI,GAAKgH,CAAC,CAAChH,IAAI,GAAC,CACjCiD,GAAG,CAAE,SAAAjD,IAAI,QAAK,CAAAiD,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAGjD,IAAI,CAAC,GAAC,CAC7Bd,SAAS,CACf,CAAC,CAAC,GAIHgH,MAAM,CAAC,SAACyB,EAAE,CAAEC,CAAC,CAAEC,IAAI,QAAK,CAAAF,EAAE,EAAIE,IAAI,CAACC,WAAW,CAACH,EAAE,CAAC,GAAKC,CAAC,GAAC,CAE5DF,SAAS,CAACvG,OAAO,CAAE,SAAA4G,QAAQ,QAAK,CAAAA,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAGf,CAAC,CAAC,GAAC,CAChD,CAAC,CAAC,CAEFxI,cAAc,CAAC,CAAEgE,KAAK,CAALA,KAAK,CAAEuE,OAAA,CAAAA,OAAQ,CAAC,CAAC,CAElCxJ,KAAK,CAACsI,SAAS,CAAC,UAAM,CACpBkB,OAAO,CAACiB,IAAI,CAAC,CAAEhI,IAAI,CAAE,OAAO,CAAEiI,IAAI,CAAE,CAAEzF,KAAA,CAAAA,KAAM,CAAE,CAAC,CAAC,CAClD,CAAC,CAAE,CAACuE,OAAO,CAAEvE,KAAK,CAAC,CAAC,CAEpB,IAAA0F,kBAAA,CAAmDhK,iBAAiB,EAAE,CAAnDiK,cAAc,CAAAD,kBAAA,CAAzBR,SAAS,CAAkBU,WAAA,CAAAF,kBAAA,CAAAE,WAAA,CAEnC,IAAAC,qBAAA,CAA6C5J,sBAAsB,EAAE,CAA7D6J,cAAc,CAAAD,qBAAA,CAAdC,cAAc,CAAEC,gBAAA,CAAAF,qBAAA,CAAAE,gBAAA,CAExB,GAAM,CAAAC,QAAQ,CAAG7J,WAAW,CAAC,CAC3BiE,MAAM,CAANA,MAAM,CACNwB,QAAQ,CAARA,QAAQ,CACRE,QAAQ,CAARA,QAAQ,CACRrF,GAAG,CAAE6C,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAE7C,GAAG,CACfwJ,eAAe,CAAEN,cAAc,CAAC7B,MAAM,CACtCoC,qBAAqB,CAAEJ,cAAc,CAACK,YAAY,CAClDC,mBAAmB,CAAE,CACnB5F,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAdA,cAAc,CACdE,cAAA,CAAAA,cACF,CAAC,CACDwD,OAAA,CAAAA,OACF,CAAC,CAAC,CAEF,GAAM,CAAA8B,YAAY,CAAGhK,eAAe,CAAC,CACnC+D,MAAM,CAANA,MAAM,CACN3D,GAAG,CAAE6C,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAE7C,GAAG,CACfmF,QAAQ,CAARA,QAAQ,CACRE,QAAA,CAAAA,QACF,CAAC,CAAC,CAEF,GAAM,CAAAkD,UAAU,CAAG9I,oBAAoB,CAKrC,CACAoK,EAAE,CAAErI,OAAO,CAACqI,EAAE,CACdN,QAAQ,CAARA,QAAQ,CACRpE,QAAQ,CAARA,QAAQ,CACR2C,OAAO,CAAPA,OAAO,CACPnE,MAAA,CAAAA,MACF,CAAC,CAAC,CAEFrE,kCAAkC,CAAC,CACjCiJ,UAAU,CAAVA,UAAU,CACVuB,gBAAgB,CAAEZ,cAAc,CAACa,KACnC,CAAC,CAAC,CAEFpK,aAAa,CAAC,CACZwF,QAAQ,CAARA,QAAQ,CACR6E,iBAAiB,CAAEX,cAAc,CAAClE,QACpC,CAAC,CAAC,CAEF,GAAM,CAAAqD,WAAW,CAAGpJ,cAAc,CAKhC,CACAmE,KAAK,CAALA,KAAK,CACLO,OAAO,CAAPA,OAAO,CACPyE,UAAU,CAAVA,UAAU,CACV1G,aAAa,CAAEL,OAAO,CAACK,aAAa,CACpCoI,oBAAoB,CAAEzI,OAAO,CAACyI,oBAAoB,CAClDV,QAAQ,CAARA,QAAQ,CACRpE,QAAQ,CAARA,QAAQ,CACRE,QAAQ,CAARA,QAAQ,CACRuE,YAAY,CAAZA,YAAY,CACZT,WAAW,CAAXA,WAAW,CACXG,gBAAgB,CAAhBA,gBAAgB,CAChB3F,MAAM,CAANA,MAAM,CAENmE,OAAA,CAAAA,OACF,CAAC,CAAC,CAEF3I,gBAAgB,CAAC,CACfoE,KAAK,CAALA,KAAK,CACLgF,UAAU,CAAVA,UAAU,CACVC,WAAA,CAAAA,WACF,CAAC,CAAC,CAEF,GAAM,CAAA0B,iBAAiB,CAAGhL,YAAY,CAAE,SAAAiB,QAAyB,QAC/D,CAAA7B,KAAA,CAAA6L,aAAA,CAACxL,wBAAwB,CAACyL,QAAQ,EAACC,KAAK,CAAE9B,UAAW,EACnDjK,KAAA,CAAA6L,aAAA,CAACrL,qBAAqB,MAAEqB,QAAQ,CAAyB,CAE5D,GAAC,CAEF,MAAO,CACLoD,KAAK,CAALA,KAAK,CACLgF,UAAU,CAAVA,UAAU,CACVC,WAAW,CAAXA,WAAW,CACX0B,iBAAA,CAAAA,iBACF,CAAC,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}