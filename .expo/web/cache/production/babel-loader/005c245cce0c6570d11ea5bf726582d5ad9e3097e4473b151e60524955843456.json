{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function _toPropertyKey(arg){var key=_toPrimitive(arg,\"string\");return typeof key===\"symbol\"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!==\"object\"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||\"default\");if(typeof res!==\"object\")return res;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(hint===\"string\"?String:Number)(input);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationContext from\"./NavigationContext\";import NavigationRouteContext from\"./NavigationRouteContext\";import SceneView from\"./SceneView\";import useNavigationCache from\"./useNavigationCache\";import useRouteCache from\"./useRouteCache\";export default function useDescriptors(_ref){var state=_ref.state,screens=_ref.screens,navigation=_ref.navigation,screenOptions=_ref.screenOptions,defaultScreenOptions=_ref.defaultScreenOptions,onAction=_ref.onAction,getState=_ref.getState,setState=_ref.setState,addListener=_ref.addListener,addKeyedListener=_ref.addKeyedListener,onRouteFocus=_ref.onRouteFocus,router=_ref.router,emitter=_ref.emitter;var _React$useState=React.useState({}),_React$useState2=_slicedToArray(_React$useState,2),options=_React$useState2[0],setOptions=_React$useState2[1];var _React$useContext=React.useContext(NavigationBuilderContext),onDispatchAction=_React$useContext.onDispatchAction,onOptionsChange=_React$useContext.onOptionsChange,stackRef=_React$useContext.stackRef;var context=React.useMemo(function(){return{navigation:navigation,onAction:onAction,addListener:addListener,addKeyedListener:addKeyedListener,onRouteFocus:onRouteFocus,onDispatchAction:onDispatchAction,onOptionsChange:onOptionsChange,stackRef:stackRef};},[navigation,onAction,addListener,addKeyedListener,onRouteFocus,onDispatchAction,onOptionsChange,stackRef]);var navigations=useNavigationCache({state:state,getState:getState,navigation:navigation,setOptions:setOptions,router:router,emitter:emitter});var routes=useRouteCache(state.routes);return routes.reduce(function(acc,route,i){var config=screens[route.name];var screen=config.props;var navigation=navigations[route.key];var optionsList=[screenOptions].concat(_toConsumableArray(config.options?config.options.filter(Boolean):[]),[screen.options,options[route.key]]);var customOptions=optionsList.reduce(function(acc,curr){return Object.assign(acc,typeof curr!=='function'?curr:curr({route:route,navigation:navigation}));},{});var mergedOptions=_objectSpread(_objectSpread({},typeof defaultScreenOptions==='function'?defaultScreenOptions({route:route,navigation:navigation,options:customOptions}):defaultScreenOptions),customOptions);var clearOptions=function clearOptions(){return setOptions(function(o){if(route.key in o){var _route$key=route.key,_=o[_route$key],rest=_objectWithoutProperties(o,[_route$key].map(_toPropertyKey));return rest;}return o;});};acc[route.key]={route:route,navigation:navigation,render:function render(){return React.createElement(NavigationBuilderContext.Provider,{key:route.key,value:context},React.createElement(NavigationContext.Provider,{value:navigation},React.createElement(NavigationRouteContext.Provider,{value:route},React.createElement(SceneView,{navigation:navigation,route:route,screen:screen,routeState:state.routes[i].state,getState:getState,setState:setState,options:mergedOptions,clearOptions:clearOptions}))));},options:mergedOptions};return acc;},{});}","map":{"version":3,"names":["React","NavigationBuilderContext","NavigationContext","NavigationRouteContext","SceneView","useNavigationCache","useRouteCache","useDescriptors","_ref","state","screens","navigation","screenOptions","defaultScreenOptions","onAction","getState","setState","addListener","addKeyedListener","onRouteFocus","router","emitter","_React$useState","useState","_React$useState2","_slicedToArray","options","setOptions","_React$useContext","useContext","onDispatchAction","onOptionsChange","stackRef","context","useMemo","navigations","routes","reduce","acc","route","i","config","name","screen","props","key","optionsList","concat","_toConsumableArray","filter","Boolean","customOptions","curr","Object","assign","mergedOptions","_objectSpread","clearOptions","o","_route$key","_","rest","_objectWithoutProperties","map","_toPropertyKey","render","createElement","Provider","value","routeState"],"sources":["C:\\Users\\ACER\\Desktop\\Nouveau dossier\\signal-clone\\node_modules\\@react-navigation\\core\\src\\useDescriptors.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  AddKeyedListener,\n  AddListener,\n} from './NavigationBuilderContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport SceneView from './SceneView';\nimport type {\n  Descriptor,\n  EventMapBase,\n  NavigationHelpers,\n  NavigationProp,\n  RouteConfig,\n  RouteProp,\n} from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useNavigationCache from './useNavigationCache';\nimport useRouteCache from './useRouteCache';\n\nexport type ScreenConfigWithParent<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  keys: (string | undefined)[];\n  options: (ScreenOptionsOrCallback<ScreenOptions> | undefined)[] | undefined;\n  props: RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>;\n};\n\ntype ScreenOptionsOrCallback<ScreenOptions extends {}> =\n  | ScreenOptions\n  | ((props: {\n      route: RouteProp<ParamListBase, string>;\n      navigation: any;\n    }) => ScreenOptions);\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  state: State;\n  screens: Record<\n    string,\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions?: ScreenOptionsOrCallback<ScreenOptions>;\n  defaultScreenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase>;\n        navigation: any;\n        options: ScreenOptions;\n      }) => ScreenOptions);\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport default function useDescriptors<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  defaultScreenOptions,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const [options, setOptions] = React.useState<Record<string, object>>({});\n  const { onDispatchAction, onOptionsChange, stackRef } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    ]\n  );\n\n  const navigations = useNavigationCache<State, ScreenOptions, EventMap>({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  return routes.reduce<\n    Record<\n      string,\n      Descriptor<\n        ScreenOptions,\n        NavigationProp<\n          ParamListBase,\n          string,\n          string | undefined,\n          State,\n          ScreenOptions,\n          EventMap\n        > &\n          ActionHelpers,\n        RouteProp<ParamListBase>\n      >\n    >\n  >((acc, route, i) => {\n    const config = screens[route.name];\n    const screen = config.props;\n    const navigation = navigations[route.key];\n\n    const optionsList = [\n      // The default `screenOptions` passed to the navigator\n      screenOptions,\n      // The `screenOptions` props passed to `Group` elements\n      ...((config.options\n        ? config.options.filter(Boolean)\n        : []) as ScreenOptionsOrCallback<ScreenOptions>[]),\n      // The `options` prop passed to `Screen` elements,\n      screen.options,\n      // The options set via `navigation.setOptions`\n      options[route.key],\n    ];\n\n    const customOptions = optionsList.reduce<ScreenOptions>(\n      (acc, curr) =>\n        Object.assign(\n          acc,\n          typeof curr !== 'function' ? curr : curr({ route, navigation })\n        ),\n      {} as ScreenOptions\n    );\n\n    const mergedOptions = {\n      ...(typeof defaultScreenOptions === 'function'\n        ? // @ts-expect-error: ts gives incorrect error here\n          defaultScreenOptions({\n            route,\n            navigation,\n            options: customOptions,\n          })\n        : defaultScreenOptions),\n      ...customOptions,\n    };\n\n    const clearOptions = () =>\n      setOptions((o) => {\n        if (route.key in o) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { [route.key]: _, ...rest } = o;\n          return rest;\n        }\n\n        return o;\n      });\n\n    acc[route.key] = {\n      route,\n      // @ts-expect-error: it's missing action helpers, fix later\n      navigation,\n      render() {\n        return (\n          <NavigationBuilderContext.Provider key={route.key} value={context}>\n            <NavigationContext.Provider value={navigation}>\n              <NavigationRouteContext.Provider value={route}>\n                <SceneView\n                  navigation={navigation}\n                  route={route}\n                  screen={screen}\n                  routeState={state.routes[i].state}\n                  getState={getState}\n                  setState={setState}\n                  options={mergedOptions}\n                  clearOptions={clearOptions}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          </NavigationBuilderContext.Provider>\n        );\n      },\n      options: mergedOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n}\n"],"mappings":"q+CAMA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,MAAO,CAAAC,wBAAwB,kCAI/B,MAAO,CAAAC,iBAAiB,2BACxB,MAAO,CAAAC,sBAAsB,gCAC7B,MAAO,CAAAC,SAAS,mBAUhB,MAAO,CAAAC,kBAAkB,4BACzB,MAAO,CAAAC,aAAa,uBAwDpB,cAAe,SAAS,CAAAC,cAAcA,CAAAC,IAAA,CAmBM,IAb1C,CAAAC,KAAK,CAamCD,IAAA,CAbxCC,KAAK,CACLC,OAAO,CAYiCF,IAAA,CAZxCE,OAAO,CACPC,UAAU,CAW8BH,IAAA,CAXxCG,UAAU,CACVC,aAAa,CAU2BJ,IAAA,CAVxCI,aAAa,CACbC,oBAAoB,CASoBL,IAAA,CATxCK,oBAAoB,CACpBC,QAAQ,CAQgCN,IAAA,CARxCM,QAAQ,CACRC,QAAQ,CAOgCP,IAAA,CAPxCO,QAAQ,CACRC,QAAQ,CAMgCR,IAAA,CANxCQ,QAAQ,CACRC,WAAW,CAK6BT,IAAA,CALxCS,WAAW,CACXC,gBAAgB,CAIwBV,IAAA,CAJxCU,gBAAgB,CAChBC,YAAY,CAG4BX,IAAA,CAHxCW,YAAY,CACZC,MAAM,CAEkCZ,IAAA,CAFxCY,MAAM,CACNC,OAAA,CACwCb,IAAA,CADxCa,OAAA,CAEA,IAAAC,eAAA,CAA8BtB,KAAK,CAACuB,QAAQ,CAAyB,CAAC,CAAC,CAAC,CAAAC,gBAAA,CAAAC,cAAA,CAAAH,eAAA,IAAjEI,OAAO,CAAAF,gBAAA,IAAEG,UAAU,CAAAH,gBAAA,IAC1B,IAAAI,iBAAA,CAAwD5B,KAAK,CAAC6B,UAAU,CACtE5B,wBAAwB,CACzB,CAFO6B,gBAAgB,CAAAF,iBAAA,CAAhBE,gBAAgB,CAAEC,eAAe,CAAAH,iBAAA,CAAfG,eAAe,CAAEC,QAAA,CAAAJ,iBAAA,CAAAI,QAAA,CAI3C,GAAM,CAAAC,OAAO,CAAGjC,KAAK,CAACkC,OAAO,CAC3B,iBAAO,CACLvB,UAAU,CAAVA,UAAU,CACVG,QAAQ,CAARA,QAAQ,CACRG,WAAW,CAAXA,WAAW,CACXC,gBAAgB,CAAhBA,gBAAgB,CAChBC,YAAY,CAAZA,YAAY,CACZW,gBAAgB,CAAhBA,gBAAgB,CAChBC,eAAe,CAAfA,eAAe,CACfC,QAAA,CAAAA,QACF,CAAC,EAAC,CACF,CACErB,UAAU,CACVG,QAAQ,CACRG,WAAW,CACXC,gBAAgB,CAChBC,YAAY,CACZW,gBAAgB,CAChBC,eAAe,CACfC,QAAQ,CACT,CACF,CAED,GAAM,CAAAG,WAAW,CAAG9B,kBAAkB,CAAiC,CACrEI,KAAK,CAALA,KAAK,CACLM,QAAQ,CAARA,QAAQ,CACRJ,UAAU,CAAVA,UAAU,CACVgB,UAAU,CAAVA,UAAU,CACVP,MAAM,CAANA,MAAM,CACNC,OAAA,CAAAA,OACF,CAAC,CAAC,CAEF,GAAM,CAAAe,MAAM,CAAG9B,aAAa,CAACG,KAAK,CAAC2B,MAAM,CAAC,CAE1C,MAAO,CAAAA,MAAM,CAACC,MAAM,CAiBlB,SAACC,GAAG,CAAEC,KAAK,CAAEC,CAAC,CAAK,CACnB,GAAM,CAAAC,MAAM,CAAG/B,OAAO,CAAC6B,KAAK,CAACG,IAAI,CAAC,CAClC,GAAM,CAAAC,MAAM,CAAGF,MAAM,CAACG,KAAK,CAC3B,GAAM,CAAAjC,UAAU,CAAGwB,WAAW,CAACI,KAAK,CAACM,GAAG,CAAC,CAEzC,GAAM,CAAAC,WAAW,EAEflC,aAAa,EAAAmC,MAAA,CAAAC,kBAAA,CAERP,MAAM,CAACf,OAAO,CACfe,MAAM,CAACf,OAAO,CAACuB,MAAM,CAACC,OAAO,CAAC,CAC9B,EAAE,GAENP,MAAM,CAACjB,OAAO,CAEdA,OAAO,CAACa,KAAK,CAACM,GAAG,CAAC,EACnB,CAED,GAAM,CAAAM,aAAa,CAAGL,WAAW,CAACT,MAAM,CACtC,SAACC,GAAG,CAAEc,IAAI,QACR,CAAAC,MAAM,CAACC,MAAM,CACXhB,GAAG,CACH,MAAO,CAAAc,IAAI,GAAK,UAAU,CAAGA,IAAI,CAAGA,IAAI,CAAC,CAAEb,KAAK,CAALA,KAAK,CAAE5B,UAAA,CAAAA,UAAW,CAAC,CAAC,CAChE,GACH,CAAC,CAAC,CACH,CAED,GAAM,CAAA4C,aAAa,CAAAC,aAAA,CAAAA,aAAA,IACb,MAAO,CAAA3C,oBAAoB,GAAK,UAAU,CAE1CA,oBAAoB,CAAC,CACnB0B,KAAK,CAALA,KAAK,CACL5B,UAAU,CAAVA,UAAU,CACVe,OAAO,CAAEyB,aACX,CAAC,CAAC,CACFtC,oBAAoB,EACrBsC,aAAA,CACJ,CAED,GAAM,CAAAM,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,QAChB,CAAA9B,UAAU,CAAE,SAAA+B,CAAC,CAAK,CAChB,GAAInB,KAAK,CAACM,GAAG,GAAI,CAAAa,CAAC,CAAE,CAElB,IAAAC,UAAA,CAASpB,KAAK,CAACM,GAAG,CAAGe,CAAC,CAAcF,CAAC,CAAAC,UAAA,EAAVE,IAAA,CAAAC,wBAAA,CAASJ,CAAC,EAAAC,UAAA,EAAAI,GAAA,CAAAC,cAAA,GACrC,MAAO,CAAAH,IAAI,CACb,CAEA,MAAO,CAAAH,CAAC,CACV,CAAC,CAAC,GAEJpB,GAAG,CAACC,KAAK,CAACM,GAAG,CAAC,CAAG,CACfN,KAAK,CAALA,KAAK,CAEL5B,UAAU,CAAVA,UAAU,CACVsD,MAAM,UAAAA,OAAA,CAAG,CACP,MACE,CAAAjE,KAAA,CAAAkE,aAAA,CAACjE,wBAAwB,CAACkE,QAAQ,EAACtB,GAAG,CAAEN,KAAK,CAACM,GAAI,CAACuB,KAAK,CAAEnC,OAAQ,EAChEjC,KAAA,CAAAkE,aAAA,CAAChE,iBAAiB,CAACiE,QAAQ,EAACC,KAAK,CAAEzD,UAAW,EAC5CX,KAAA,CAAAkE,aAAA,CAAC/D,sBAAsB,CAACgE,QAAQ,EAACC,KAAK,CAAE7B,KAAM,EAC5CvC,KAAA,CAAAkE,aAAA,CAAC9D,SAAS,EACRO,UAAU,CAAEA,UAAW,CACvB4B,KAAK,CAAEA,KAAM,CACbI,MAAM,CAAEA,MAAO,CACf0B,UAAU,CAAE5D,KAAK,CAAC2B,MAAM,CAACI,CAAC,CAAC,CAAC/B,KAAM,CAClCM,QAAQ,CAAEA,QAAS,CACnBC,QAAQ,CAAEA,QAAS,CACnBU,OAAO,CAAE6B,aAAc,CACvBE,YAAY,CAAEA,YAAa,EAC3B,CAC8B,CACP,CACK,CAExC,CAAC,CACD/B,OAAO,CAAE6B,aACX,CAAC,CAED,MAAO,CAAAjB,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}