{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';var UNINTIALIZED_STATE={};export default function useSyncState(initialState){var stateRef=React.useRef(UNINTIALIZED_STATE);var isSchedulingRef=React.useRef(false);var isMountedRef=React.useRef(true);React.useEffect(function(){isMountedRef.current=true;return function(){isMountedRef.current=false;};},[]);if(stateRef.current===UNINTIALIZED_STATE){stateRef.current=typeof initialState==='function'?initialState():initialState;}var _React$useState=React.useState(stateRef.current),_React$useState2=_slicedToArray(_React$useState,2),trackingState=_React$useState2[0],setTrackingState=_React$useState2[1];var getState=React.useCallback(function(){return stateRef.current;},[]);var setState=React.useCallback(function(state){if(state===stateRef.current||!isMountedRef.current){return;}stateRef.current=state;if(!isSchedulingRef.current){setTrackingState(state);}},[]);var scheduleUpdate=React.useCallback(function(callback){isSchedulingRef.current=true;try{callback();}finally{isSchedulingRef.current=false;}},[]);var flushUpdates=React.useCallback(function(){if(!isMountedRef.current){return;}setTrackingState(stateRef.current);},[]);if(trackingState!==stateRef.current){setTrackingState(stateRef.current);}var state=stateRef.current;React.useDebugValue(state);return[state,getState,setState,scheduleUpdate,flushUpdates];}","map":{"version":3,"names":["React","UNINTIALIZED_STATE","useSyncState","initialState","stateRef","useRef","isSchedulingRef","isMountedRef","useEffect","current","_React$useState","useState","_React$useState2","_slicedToArray","trackingState","setTrackingState","getState","useCallback","setState","state","scheduleUpdate","callback","flushUpdates","useDebugValue"],"sources":["C:\\Users\\ACER\\Desktop\\Nouveau dossier\\signal-clone\\node_modules\\@react-navigation\\core\\src\\useSyncState.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst UNINTIALIZED_STATE = {};\n\n/**\n * This is definitely not compatible with concurrent mode, but we don't have a solution for sync state yet.\n */\nexport default function useSyncState<T>(initialState?: (() => T) | T) {\n  const stateRef = React.useRef<T>(UNINTIALIZED_STATE as any);\n  const isSchedulingRef = React.useRef(false);\n  const isMountedRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  if (stateRef.current === UNINTIALIZED_STATE) {\n    stateRef.current =\n      // @ts-expect-error: initialState is a function, but TypeScript doesn't think so\n      typeof initialState === 'function' ? initialState() : initialState;\n  }\n\n  const [trackingState, setTrackingState] = React.useState(stateRef.current);\n\n  const getState = React.useCallback(() => stateRef.current, []);\n\n  const setState = React.useCallback((state: T) => {\n    if (state === stateRef.current || !isMountedRef.current) {\n      return;\n    }\n\n    stateRef.current = state;\n\n    if (!isSchedulingRef.current) {\n      setTrackingState(state);\n    }\n  }, []);\n\n  const scheduleUpdate = React.useCallback((callback: () => void) => {\n    isSchedulingRef.current = true;\n\n    try {\n      callback();\n    } finally {\n      isSchedulingRef.current = false;\n    }\n  }, []);\n\n  const flushUpdates = React.useCallback(() => {\n    if (!isMountedRef.current) {\n      return;\n    }\n\n    // Make sure that the tracking state is up-to-date.\n    // We call it unconditionally, but React should skip the update if state is unchanged.\n    setTrackingState(stateRef.current);\n  }, []);\n\n  // If we're rendering and the tracking state is out of date, update it immediately\n  // This will make sure that our updates are applied as early as possible.\n  if (trackingState !== stateRef.current) {\n    setTrackingState(stateRef.current);\n  }\n\n  const state = stateRef.current;\n\n  React.useDebugValue(state);\n\n  return [state, getState, setState, scheduleUpdate, flushUpdates] as const;\n}\n"],"mappings":"iEAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,GAAM,CAAAC,kBAAkB,CAAG,CAAC,CAAC,CAK7B,cAAe,SAAS,CAAAC,YAAYA,CAAIC,YAA4B,CAAE,CACpE,GAAM,CAAAC,QAAQ,CAAGJ,KAAK,CAACK,MAAM,CAAIJ,kBAAkB,CAAQ,CAC3D,GAAM,CAAAK,eAAe,CAAGN,KAAK,CAACK,MAAM,CAAC,KAAK,CAAC,CAC3C,GAAM,CAAAE,YAAY,CAAGP,KAAK,CAACK,MAAM,CAAC,IAAI,CAAC,CAEvCL,KAAK,CAACQ,SAAS,CAAC,UAAM,CACpBD,YAAY,CAACE,OAAO,CAAG,IAAI,CAE3B,MAAO,WAAM,CACXF,YAAY,CAACE,OAAO,CAAG,KAAK,CAC9B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIL,QAAQ,CAACK,OAAO,GAAKR,kBAAkB,CAAE,CAC3CG,QAAQ,CAACK,OAAO,CAEd,MAAO,CAAAN,YAAY,GAAK,UAAU,CAAGA,YAAY,EAAE,CAAGA,YAAY,CACtE,CAEA,IAAAO,eAAA,CAA0CV,KAAK,CAACW,QAAQ,CAACP,QAAQ,CAACK,OAAO,CAAC,CAAAG,gBAAA,CAAAC,cAAA,CAAAH,eAAA,IAAnEI,aAAa,CAAAF,gBAAA,IAAEG,gBAAgB,CAAAH,gBAAA,IAEtC,GAAM,CAAAI,QAAQ,CAAGhB,KAAK,CAACiB,WAAW,CAAC,iBAAM,CAAAb,QAAQ,CAACK,OAAO,GAAE,EAAE,CAAC,CAE9D,GAAM,CAAAS,QAAQ,CAAGlB,KAAK,CAACiB,WAAW,CAAE,SAAAE,KAAQ,CAAK,CAC/C,GAAIA,KAAK,GAAKf,QAAQ,CAACK,OAAO,EAAI,CAACF,YAAY,CAACE,OAAO,CAAE,CACvD,OACF,CAEAL,QAAQ,CAACK,OAAO,CAAGU,KAAK,CAExB,GAAI,CAACb,eAAe,CAACG,OAAO,CAAE,CAC5BM,gBAAgB,CAACI,KAAK,CAAC,CACzB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,cAAc,CAAGpB,KAAK,CAACiB,WAAW,CAAE,SAAAI,QAAoB,CAAK,CACjEf,eAAe,CAACG,OAAO,CAAG,IAAI,CAE9B,GAAI,CACFY,QAAQ,EAAE,CACZ,CAAC,OAAS,CACRf,eAAe,CAACG,OAAO,CAAG,KAAK,CACjC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAa,YAAY,CAAGtB,KAAK,CAACiB,WAAW,CAAC,UAAM,CAC3C,GAAI,CAACV,YAAY,CAACE,OAAO,CAAE,CACzB,OACF,CAIAM,gBAAgB,CAACX,QAAQ,CAACK,OAAO,CAAC,CACpC,CAAC,CAAE,EAAE,CAAC,CAIN,GAAIK,aAAa,GAAKV,QAAQ,CAACK,OAAO,CAAE,CACtCM,gBAAgB,CAACX,QAAQ,CAACK,OAAO,CAAC,CACpC,CAEA,GAAM,CAAAU,KAAK,CAAGf,QAAQ,CAACK,OAAO,CAE9BT,KAAK,CAACuB,aAAa,CAACJ,KAAK,CAAC,CAE1B,MAAO,CAACA,KAAK,CAAEH,QAAQ,CAAEE,QAAQ,CAAEE,cAAc,CAAEE,YAAY,CAAC,CAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}