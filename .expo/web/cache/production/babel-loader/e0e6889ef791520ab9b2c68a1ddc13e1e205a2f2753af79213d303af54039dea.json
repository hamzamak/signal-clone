{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"key\",\"routeNames\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import checkDuplicateRouteNames from\"./checkDuplicateRouteNames\";import checkSerializable from\"./checkSerializable\";import{NOT_INITIALIZED_ERROR}from\"./createNavigationContainerRef\";import EnsureSingleNavigator from\"./EnsureSingleNavigator\";import findFocusedRoute from\"./findFocusedRoute\";import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationContainerRefContext from\"./NavigationContainerRefContext\";import NavigationContext from\"./NavigationContext\";import NavigationRouteContext from\"./NavigationRouteContext\";import NavigationStateContext from\"./NavigationStateContext\";import UnhandledActionContext from\"./UnhandledActionContext\";import useChildListeners from\"./useChildListeners\";import useEventEmitter from\"./useEventEmitter\";import useKeyedChildListeners from\"./useKeyedChildListeners\";import useOptionsGetters from\"./useOptionsGetters\";import{ScheduleUpdateContext}from\"./useScheduleUpdate\";import useSyncState from\"./useSyncState\";var serializableWarnings=[];var duplicateNameWarnings=[];var getPartialState=function getPartialState(state){if(state===undefined){return;}var key=state.key,routeNames=state.routeNames,partialState=_objectWithoutProperties(state,_excluded);return _objectSpread(_objectSpread({},partialState),{},{stale:true,routes:state.routes.map(function(route){if(route.state===undefined){return route;}return _objectSpread(_objectSpread({},route),{},{state:getPartialState(route.state)});})});};var BaseNavigationContainer=React.forwardRef(function BaseNavigationContainer(_ref,ref){var initialState=_ref.initialState,onStateChange=_ref.onStateChange,onUnhandledAction=_ref.onUnhandledAction,independent=_ref.independent,children=_ref.children;var parent=React.useContext(NavigationStateContext);if(!parent.isDefault&&!independent){throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");}var _useSyncState=useSyncState(function(){return getPartialState(initialState==null?undefined:initialState);}),_useSyncState2=_slicedToArray(_useSyncState,5),state=_useSyncState2[0],getState=_useSyncState2[1],setState=_useSyncState2[2],scheduleUpdate=_useSyncState2[3],flushUpdates=_useSyncState2[4];var isFirstMountRef=React.useRef(true);var navigatorKeyRef=React.useRef();var getKey=React.useCallback(function(){return navigatorKeyRef.current;},[]);var setKey=React.useCallback(function(key){navigatorKeyRef.current=key;},[]);var _useChildListeners=useChildListeners(),listeners=_useChildListeners.listeners,addListener=_useChildListeners.addListener;var _useKeyedChildListene=useKeyedChildListeners(),keyedListeners=_useKeyedChildListene.keyedListeners,addKeyedListener=_useKeyedChildListene.addKeyedListener;var dispatch=React.useCallback(function(action){if(listeners.focus[0]==null){console.error(NOT_INITIALIZED_ERROR);}else{listeners.focus[0](function(navigation){return navigation.dispatch(action);});}},[listeners.focus]);var canGoBack=React.useCallback(function(){if(listeners.focus[0]==null){return false;}var _listeners$focus$=listeners.focus[0](function(navigation){return navigation.canGoBack();}),result=_listeners$focus$.result,handled=_listeners$focus$.handled;if(handled){return result;}else{return false;}},[listeners.focus]);var resetRoot=React.useCallback(function(state){var _ref2;var _keyedListeners$getSt,_keyedListeners$getSt2;var target=(_ref2=state===null||state===void 0?void 0:state.key)!=null?_ref2:(_keyedListeners$getSt=(_keyedListeners$getSt2=keyedListeners.getState).root)===null||_keyedListeners$getSt===void 0?void 0:_keyedListeners$getSt.call(_keyedListeners$getSt2).key;if(target==null){console.error(NOT_INITIALIZED_ERROR);}else{listeners.focus[0](function(navigation){return navigation.dispatch(_objectSpread(_objectSpread({},CommonActions.reset(state)),{},{target:target}));});}},[keyedListeners.getState,listeners.focus]);var getRootState=React.useCallback(function(){var _keyedListeners$getSt3,_keyedListeners$getSt4;return(_keyedListeners$getSt3=(_keyedListeners$getSt4=keyedListeners.getState).root)===null||_keyedListeners$getSt3===void 0?void 0:_keyedListeners$getSt3.call(_keyedListeners$getSt4);},[keyedListeners.getState]);var getCurrentRoute=React.useCallback(function(){var state=getRootState();if(state==null){return undefined;}var route=findFocusedRoute(state);return route;},[getRootState]);var emitter=useEventEmitter();var _useOptionsGetters=useOptionsGetters({}),addOptionsGetter=_useOptionsGetters.addOptionsGetter,getCurrentOptions=_useOptionsGetters.getCurrentOptions;var navigation=React.useMemo(function(){return _objectSpread(_objectSpread(_objectSpread({},Object.keys(CommonActions).reduce(function(acc,name){acc[name]=function(){return dispatch(CommonActions[name].apply(CommonActions,arguments));};return acc;},{})),emitter.create('root')),{},{dispatch:dispatch,resetRoot:resetRoot,isFocused:function isFocused(){return true;},canGoBack:canGoBack,getParent:function getParent(){return undefined;},getState:function getState(){return stateRef.current;},getRootState:getRootState,getCurrentRoute:getCurrentRoute,getCurrentOptions:getCurrentOptions,isReady:function isReady(){return listeners.focus[0]!=null;}});},[canGoBack,dispatch,emitter,getCurrentOptions,getCurrentRoute,getRootState,listeners.focus,resetRoot]);React.useImperativeHandle(ref,function(){return navigation;},[navigation]);var onDispatchAction=React.useCallback(function(action,noop){emitter.emit({type:'__unsafe_action__',data:{action:action,noop:noop,stack:stackRef.current}});},[emitter]);var lastEmittedOptionsRef=React.useRef();var onOptionsChange=React.useCallback(function(options){if(lastEmittedOptionsRef.current===options){return;}lastEmittedOptionsRef.current=options;emitter.emit({type:'options',data:{options:options}});},[emitter]);var stackRef=React.useRef();var builderContext=React.useMemo(function(){return{addListener:addListener,addKeyedListener:addKeyedListener,onDispatchAction:onDispatchAction,onOptionsChange:onOptionsChange,stackRef:stackRef};},[addListener,addKeyedListener,onDispatchAction,onOptionsChange]);var scheduleContext=React.useMemo(function(){return{scheduleUpdate:scheduleUpdate,flushUpdates:flushUpdates};},[scheduleUpdate,flushUpdates]);var isInitialRef=React.useRef(true);var getIsInitial=React.useCallback(function(){return isInitialRef.current;},[]);var context=React.useMemo(function(){return{state:state,getState:getState,setState:setState,getKey:getKey,setKey:setKey,getIsInitial:getIsInitial,addOptionsGetter:addOptionsGetter};},[state,getState,setState,getKey,setKey,getIsInitial,addOptionsGetter]);var onStateChangeRef=React.useRef(onStateChange);var stateRef=React.useRef(state);React.useEffect(function(){isInitialRef.current=false;onStateChangeRef.current=onStateChange;stateRef.current=state;});React.useEffect(function(){var hydratedState=getRootState();if(process.env.NODE_ENV!=='production'){if(hydratedState!==undefined){var serializableResult=checkSerializable(hydratedState);if(!serializableResult.serializable){var location=serializableResult.location,reason=serializableResult.reason;var path='';var pointer=hydratedState;var params=false;for(var i=0;i<location.length;i++){var curr=location[i];var prev=location[i-1];pointer=pointer[curr];if(!params&&curr==='state'){continue;}else if(!params&&curr==='routes'){if(path){path+=' > ';}}else if(!params&&typeof curr==='number'&&prev==='routes'){var _pointer;path+=(_pointer=pointer)===null||_pointer===void 0?void 0:_pointer.name;}else if(!params){path+=\" > \"+curr;params=true;}else{if(typeof curr==='number'||/^[0-9]+$/.test(curr)){path+=\"[\"+curr+\"]\";}else if(/^[a-z$_]+$/i.test(curr)){path+=\".\"+curr;}else{path+=\"[\"+JSON.stringify(curr)+\"]\";}}}var message=\"Non-serializable values were found in the navigation state. Check:\\n\\n\"+path+\" (\"+reason+\")\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\";if(!serializableWarnings.includes(message)){serializableWarnings.push(message);console.warn(message);}}var duplicateRouteNamesResult=checkDuplicateRouteNames(hydratedState);if(duplicateRouteNamesResult.length){var _message=\"Found screens with the same name nested inside one another. Check:\\n\"+duplicateRouteNamesResult.map(function(locations){return\"\\n\"+locations.join(', ');})+\"\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.\";if(!duplicateNameWarnings.includes(_message)){duplicateNameWarnings.push(_message);console.warn(_message);}}}}emitter.emit({type:'state',data:{state:state}});if(!isFirstMountRef.current&&onStateChangeRef.current){onStateChangeRef.current(hydratedState);}isFirstMountRef.current=false;},[getRootState,emitter,state]);var defaultOnUnhandledAction=React.useCallback(function(action){if(process.env.NODE_ENV==='production'){return;}var payload=action.payload;var message=\"The action '\"+action.type+\"'\"+(payload?\" with payload \"+JSON.stringify(action.payload):'')+\" was not handled by any navigator.\";switch(action.type){case'NAVIGATE':case'PUSH':case'REPLACE':case'JUMP_TO':if(payload!==null&&payload!==void 0&&payload.name){message+=\"\\n\\nDo you have a screen named '\"+payload.name+\"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\";}else{message+=\"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.\";}break;case'GO_BACK':case'POP':case'POP_TO_TOP':message+=\"\\n\\nIs there any screen to go back to?\";break;case'OPEN_DRAWER':case'CLOSE_DRAWER':case'TOGGLE_DRAWER':message+=\"\\n\\nIs your screen inside a Drawer navigator?\";break;}message+=\"\\n\\nThis is a development-only warning and won't be shown in production.\";console.error(message);},[]);var element=React.createElement(NavigationContainerRefContext.Provider,{value:navigation},React.createElement(ScheduleUpdateContext.Provider,{value:scheduleContext},React.createElement(NavigationBuilderContext.Provider,{value:builderContext},React.createElement(NavigationStateContext.Provider,{value:context},React.createElement(UnhandledActionContext.Provider,{value:onUnhandledAction!=null?onUnhandledAction:defaultOnUnhandledAction},React.createElement(EnsureSingleNavigator,null,children))))));if(independent){element=React.createElement(NavigationRouteContext.Provider,{value:undefined},React.createElement(NavigationContext.Provider,{value:undefined},element));}return element;});export default BaseNavigationContainer;","map":{"version":3,"names":["CommonActions","React","checkDuplicateRouteNames","checkSerializable","NOT_INITIALIZED_ERROR","EnsureSingleNavigator","findFocusedRoute","NavigationBuilderContext","NavigationContainerRefContext","NavigationContext","NavigationRouteContext","NavigationStateContext","UnhandledActionContext","useChildListeners","useEventEmitter","useKeyedChildListeners","useOptionsGetters","ScheduleUpdateContext","useSyncState","serializableWarnings","duplicateNameWarnings","getPartialState","state","undefined","key","routeNames","partialState","_objectWithoutProperties","_excluded","_objectSpread","stale","routes","map","route","BaseNavigationContainer","forwardRef","_ref","ref","initialState","onStateChange","onUnhandledAction","independent","children","parent","useContext","isDefault","Error","_useSyncState","_useSyncState2","_slicedToArray","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","_useChildListeners","listeners","addListener","_useKeyedChildListene","keyedListeners","addKeyedListener","dispatch","action","focus","console","error","navigation","canGoBack","_listeners$focus$","result","handled","resetRoot","_ref2","_keyedListeners$getSt","_keyedListeners$getSt2","target","root","call","reset","getRootState","_keyedListeners$getSt3","_keyedListeners$getSt4","getCurrentRoute","emitter","_useOptionsGetters","addOptionsGetter","getCurrentOptions","useMemo","Object","keys","reduce","acc","name","apply","arguments","create","isFocused","getParent","stateRef","isReady","useImperativeHandle","onDispatchAction","noop","emit","type","data","stack","stackRef","lastEmittedOptionsRef","onOptionsChange","options","builderContext","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","hydratedState","process","env","NODE_ENV","serializableResult","serializable","location","reason","path","pointer","params","i","length","curr","prev","_pointer","test","JSON","stringify","message","includes","push","warn","duplicateRouteNamesResult","locations","join","defaultOnUnhandledAction","payload","element","createElement","Provider","value"],"sources":["C:\\Users\\ACER\\Desktop\\Nouveau dossier\\signal-clone\\node_modules\\@react-navigation\\core\\src\\BaseNavigationContainer.tsx"],"sourcesContent":["import {\n  CommonActions,\n  InitialState,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport checkDuplicateRouteNames from './checkDuplicateRouteNames';\nimport checkSerializable from './checkSerializable';\nimport { NOT_INITIALIZED_ERROR } from './createNavigationContainerRef';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport findFocusedRoute from './findFocusedRoute';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport useChildListeners from './useChildListeners';\nimport useEventEmitter from './useEventEmitter';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useSyncState from './useSyncState';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst serializableWarnings: string[] = [];\nconst duplicateNameWarnings: string[] = [];\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef<ParamListBase>>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [state, getState, setState, scheduleUpdate, flushUpdates] =\n      useSyncState<State>(() =>\n        getPartialState(initialState == null ? undefined : initialState)\n      );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = React.useCallback(\n      (\n        action:\n          | NavigationAction\n          | ((state: NavigationState) => NavigationAction)\n      ) => {\n        if (listeners.focus[0] == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) => navigation.dispatch(action));\n        }\n      },\n      [listeners.focus]\n    );\n\n    const canGoBack = React.useCallback(() => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    }, [listeners.focus]);\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) =>\n            navigation.dispatch({\n              ...CommonActions.reset(state),\n              target,\n            })\n          );\n        }\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      const state = getRootState();\n\n      if (state == null) {\n        return undefined;\n      }\n\n      const route = findFocusedRoute(state);\n\n      return route as Route<string> | undefined;\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    const navigation: NavigationContainerRef<ParamListBase> = React.useMemo(\n      () => ({\n        ...Object.keys(CommonActions).reduce<any>((acc, name) => {\n          acc[name] = (...args: any[]) =>\n            // @ts-expect-error: this is ok\n            dispatch(CommonActions[name](...args));\n          return acc;\n        }, {}),\n        ...emitter.create('root'),\n        dispatch,\n        resetRoot,\n        isFocused: () => true,\n        canGoBack,\n        getParent: () => undefined,\n        getState: () => stateRef.current,\n        getRootState,\n        getCurrentRoute,\n        getCurrentOptions,\n        isReady: () => listeners.focus[0] != null,\n      }),\n      [\n        canGoBack,\n        dispatch,\n        emitter,\n        getCurrentOptions,\n        getCurrentRoute,\n        getRootState,\n        listeners.focus,\n        resetRoot,\n      ]\n    );\n\n    React.useImperativeHandle(ref, () => navigation, [navigation]);\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({\n          type: '__unsafe_action__',\n          data: { action, noop, stack: stackRef.current },\n        });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options: object) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const stackRef = React.useRef<string | undefined>();\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n        stackRef,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n    const stateRef = React.useRef(state);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n      stateRef.current = state;\n    });\n\n    React.useEffect(() => {\n      const hydratedState = getRootState();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (hydratedState !== undefined) {\n          const serializableResult = checkSerializable(hydratedState);\n\n          if (!serializableResult.serializable) {\n            const { location, reason } = serializableResult;\n\n            let path = '';\n            let pointer: Record<any, any> = hydratedState;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n\n          const duplicateRouteNamesResult =\n            checkDuplicateRouteNames(hydratedState);\n\n          if (duplicateRouteNamesResult.length) {\n            const message = `Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(\n              (locations) => `\\n${locations.join(', ')}`\n            )}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;\n\n            if (!duplicateNameWarnings.includes(message)) {\n              duplicateNameWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(hydratedState);\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <NavigationContainerRefContext.Provider value={navigation}>\n        <ScheduleUpdateContext.Provider value={scheduleContext}>\n          <NavigationBuilderContext.Provider value={builderContext}>\n            <NavigationStateContext.Provider value={context}>\n              <UnhandledActionContext.Provider\n                value={onUnhandledAction ?? defaultOnUnhandledAction}\n              >\n                <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n              </UnhandledActionContext.Provider>\n            </NavigationStateContext.Provider>\n          </NavigationBuilderContext.Provider>\n        </ScheduleUpdateContext.Provider>\n      </NavigationContainerRefContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}