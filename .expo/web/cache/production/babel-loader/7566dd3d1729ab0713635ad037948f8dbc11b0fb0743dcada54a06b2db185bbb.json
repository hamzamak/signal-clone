{"ast":null,"code":"export default function findFocusedRoute(state){var _ref;var _current2,_current3;var current=state;while(((_current=current)===null||_current===void 0?void 0:_current.routes[(_current$index=current.index)!=null?_current$index:0].state)!=null){var _current$index,_current$index2;var _current;current=current.routes[(_current$index2=current.index)!=null?_current$index2:0].state;}var route=(_current2=current)===null||_current2===void 0?void 0:_current2.routes[(_ref=(_current3=current)===null||_current3===void 0?void 0:_current3.index)!=null?_ref:0];return route;}","map":{"version":3,"names":["findFocusedRoute","state","_ref","_current2","_current3","current","_current","routes","_current$index","index","_current$index2","route"],"sources":["C:\\Users\\ACER\\Desktop\\Nouveau dossier\\signal-clone\\node_modules\\@react-navigation\\core\\src\\findFocusedRoute.tsx"],"sourcesContent":["import type { InitialState } from '@react-navigation/routers';\n\nexport default function findFocusedRoute(state: InitialState) {\n  let current: InitialState | undefined = state;\n\n  while (current?.routes[current.index ?? 0].state != null) {\n    current = current.routes[current.index ?? 0].state;\n  }\n\n  const route = current?.routes[current?.index ?? 0];\n\n  return route;\n}\n"],"mappings":"AAEA,cAAe,SAAS,CAAAA,gBAAgBA,CAACC,KAAmB,CAAE,KAAAC,IAAA,KAAAC,SAAA,CAAAC,SAAA,CAC5D,GAAI,CAAAC,OAAiC,CAAGJ,KAAK,CAE7C,MAAO,EAAAK,QAAA,CAAAD,OAAO,UAAAC,QAAA,iBAAPA,QAAA,CAASC,MAAM,EAAAC,cAAA,CAACH,OAAO,CAACI,KAAK,QAAAD,cAAA,CAAI,CAAC,CAAC,CAACP,KAAK,GAAI,IAAI,CAAE,KAAAO,cAAA,CAAAE,eAAA,KAAAJ,QAAA,CACxDD,OAAO,CAAGA,OAAO,CAACE,MAAM,EAAAG,eAAA,CAACL,OAAO,CAACI,KAAK,QAAAC,eAAA,CAAI,CAAC,CAAC,CAACT,KAAK,CACpD,CAEA,GAAM,CAAAU,KAAK,EAAAR,SAAA,CAAGE,OAAO,UAAAF,SAAA,iBAAPA,SAAA,CAASI,MAAM,EAAAL,IAAA,CAAC,CAAAE,SAAA,CAAAC,OAAO,UAAAD,SAAA,iBAAPA,SAAA,CAASK,KAAK,QAAAP,IAAA,CAAI,CAAC,CAAC,CAElD,MAAO,CAAAS,KAAK,CACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}