{"ast":null,"code":"import*as React from'react';import CurrentRenderContext from\"./CurrentRenderContext\";export default function useCurrentRender(_ref){var state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors;var current=React.useContext(CurrentRenderContext);if(current&&navigation.isFocused()){current.options=descriptors[state.routes[state.index].key].options;}}","map":{"version":3,"names":["React","CurrentRenderContext","useCurrentRender","_ref","state","navigation","descriptors","current","useContext","isFocused","options","routes","index","key"],"sources":["C:\\Users\\ACER\\Desktop\\Nouveau dossier\\signal-clone\\node_modules\\@react-navigation\\core\\src\\useCurrentRender.tsx"],"sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  NavigationProp,\n  RouteProp,\n} from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: Record<\n    string,\n    Descriptor<object, NavigationProp<ParamListBase>, RouteProp<ParamListBase>>\n  >;\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"],"mappings":"AACA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,MAAO,CAAAC,oBAAoB,8BAqB3B,cAAe,SAAS,CAAAC,gBAAgBA,CAAAC,IAAA,CAI5B,IAHV,CAAAC,KAAK,CAGGD,IAAA,CAHRC,KAAK,CACLC,UAAU,CAEFF,IAAA,CAFRE,UAAU,CACVC,WAAA,CACQH,IAAA,CADRG,WAAA,CAEA,GAAM,CAAAC,OAAO,CAAGP,KAAK,CAACQ,UAAU,CAACP,oBAAoB,CAAC,CAEtD,GAAIM,OAAO,EAAIF,UAAU,CAACI,SAAS,EAAE,CAAE,CACrCF,OAAO,CAACG,OAAO,CAAGJ,WAAW,CAACF,KAAK,CAACO,MAAM,CAACP,KAAK,CAACQ,KAAK,CAAC,CAACC,GAAG,CAAC,CAACH,OAAO,CACtE,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}